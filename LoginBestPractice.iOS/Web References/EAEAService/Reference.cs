//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace LoginBestPractice.iOS.EAEAService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EAEAServiceSoap", Namespace="genesysinfo.net")]
    public partial class EAEAService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private MySoapHeader mySoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback GetAllTypesAndCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTypesAndCountToMyQuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuesAndAnswerByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuesAndAnswerByPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuesAndAnswerByFilterNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuesAndAnsweTotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuesAndAnsweBase64TotalOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuesAndAnswerByQueryWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuesAndAnswerByMyQuesPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuesAndAnswerByFilter1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategorysOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuestionByUnAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UsingMD5OperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsBindingOperationCompleted;
        
        private System.Threading.SendOrPostCallback MicroSignalBindingOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelBindingOperationCompleted;
        
        private System.Threading.SendOrPostCallback EmailResgistOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserResgistOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserResgistClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyUserImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserAndPwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertUKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidateByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetValidateByEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageByFilterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageByNewDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAttachment_Ques_AnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageByPostAcceptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageByFilterNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsClaimMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClaimMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClaimStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMessageReadedOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertQueAndAnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertMyQueAndAnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateQueAndAnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteQueAndAnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountByQuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSiteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifySiteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSiteCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteCategorysOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSiteTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifySiteTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSiteTableOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteTableByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFileByPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoticeRemindsWithNumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpenidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerEntityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSoftUpdateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifySoftUpdateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSoftUpdateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSoftUpdateInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllInternetLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyInternetLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInternetLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInternetLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserClaimExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTrialApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTrialApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddTrialApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTrialApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelCustFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCustFeedbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMSAttentionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMSAttentionOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMSAttentionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMSAttentionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChatPathOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public EAEAService() {
            this.Url = "http://icantest.genesysinfo.net/eaea/EAEAService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public MySoapHeader MySoapHeaderValue {
            get {
                return this.mySoapHeaderValueField;
            }
            set {
                this.mySoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllTypesAndCountCompletedEventHandler GetAllTypesAndCountCompleted;
        
        /// <remarks/>
        public event GetAllTypesAndCountToMyQuesCompletedEventHandler GetAllTypesAndCountToMyQuesCompleted;
        
        /// <remarks/>
        public event GetQuesAndAnswerByFilterCompletedEventHandler GetQuesAndAnswerByFilterCompleted;
        
        /// <remarks/>
        public event GetQuesAndAnswerByPageCompletedEventHandler GetQuesAndAnswerByPageCompleted;
        
        /// <remarks/>
        public event GetQuesAndAnswerByFilterNewCompletedEventHandler GetQuesAndAnswerByFilterNewCompleted;
        
        /// <remarks/>
        public event GetQuesAndAnsweTotalCompletedEventHandler GetQuesAndAnsweTotalCompleted;
        
        /// <remarks/>
        public event GetQuesAndAnsweBase64TotalCompletedEventHandler GetQuesAndAnsweBase64TotalCompleted;
        
        /// <remarks/>
        public event GetQuesAndAnswerByQueryWordCompletedEventHandler GetQuesAndAnswerByQueryWordCompleted;
        
        /// <remarks/>
        public event GetQuesAndAnswerByMyQuesPageCompletedEventHandler GetQuesAndAnswerByMyQuesPageCompleted;
        
        /// <remarks/>
        public event GetQuesAndAnswerByFilter1CompletedEventHandler GetQuesAndAnswerByFilter1Completed;
        
        /// <remarks/>
        public event GetAllTypesCompletedEventHandler GetAllTypesCompleted;
        
        /// <remarks/>
        public event GetCategorysCompletedEventHandler GetCategorysCompleted;
        
        /// <remarks/>
        public event GetQuestionByUnAnswerCompletedEventHandler GetQuestionByUnAnswerCompleted;
        
        /// <remarks/>
        public event UsingMD5CompletedEventHandler UsingMD5Completed;
        
        /// <remarks/>
        public event HelloCompletedEventHandler HelloCompleted;
        
        /// <remarks/>
        public event IsBindingCompletedEventHandler IsBindingCompleted;
        
        /// <remarks/>
        public event MicroSignalBindingCompletedEventHandler MicroSignalBindingCompleted;
        
        /// <remarks/>
        public event CancelBindingCompletedEventHandler CancelBindingCompleted;
        
        /// <remarks/>
        public event EmailResgistCompletedEventHandler EmailResgistCompleted;
        
        /// <remarks/>
        public event ForgetPasswordCompletedEventHandler ForgetPasswordCompleted;
        
        /// <remarks/>
        public event InitPasswordCompletedEventHandler InitPasswordCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event UserResgistCompletedEventHandler UserResgistCompleted;
        
        /// <remarks/>
        public event UserResgistClientCompletedEventHandler UserResgistClientCompleted;
        
        /// <remarks/>
        public event ModifyUserCompletedEventHandler ModifyUserCompleted;
        
        /// <remarks/>
        public event ModifyUserImageCompletedEventHandler ModifyUserImageCompleted;
        
        /// <remarks/>
        public event GetUserAndPwdCompletedEventHandler GetUserAndPwdCompleted;
        
        /// <remarks/>
        public event GetUserByIdCompletedEventHandler GetUserByIdCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event InsertUKeyCompletedEventHandler InsertUKeyCompleted;
        
        /// <remarks/>
        public event GetValidateByIdCompletedEventHandler GetValidateByIdCompleted;
        
        /// <remarks/>
        public event GetValidateByEmailCompletedEventHandler GetValidateByEmailCompleted;
        
        /// <remarks/>
        public event InsertMessageCompletedEventHandler InsertMessageCompleted;
        
        /// <remarks/>
        public event GetMessageByFilterCompletedEventHandler GetMessageByFilterCompleted;
        
        /// <remarks/>
        public event GetMessageByNewDateCompletedEventHandler GetMessageByNewDateCompleted;
        
        /// <remarks/>
        public event AddMessageCompletedEventHandler AddMessageCompleted;
        
        /// <remarks/>
        public event AddAttachmentCompletedEventHandler AddAttachmentCompleted;
        
        /// <remarks/>
        public event AddAttachment_Ques_AnswerCompletedEventHandler AddAttachment_Ques_AnswerCompleted;
        
        /// <remarks/>
        public event GetMessageByPostAcceptCompletedEventHandler GetMessageByPostAcceptCompleted;
        
        /// <remarks/>
        public event GetMessageByFilterNewCompletedEventHandler GetMessageByFilterNewCompleted;
        
        /// <remarks/>
        public event IsClaimMessageCompletedEventHandler IsClaimMessageCompleted;
        
        /// <remarks/>
        public event GetClaimMessageCompletedEventHandler GetClaimMessageCompleted;
        
        /// <remarks/>
        public event GetClaimStateCompletedEventHandler GetClaimStateCompleted;
        
        /// <remarks/>
        public event UpdateMessageReadedCompletedEventHandler UpdateMessageReadedCompleted;
        
        /// <remarks/>
        public event InsertQueAndAnsCompletedEventHandler InsertQueAndAnsCompleted;
        
        /// <remarks/>
        public event InsertMyQueAndAnsCompletedEventHandler InsertMyQueAndAnsCompleted;
        
        /// <remarks/>
        public event UpdateQueAndAnsCompletedEventHandler UpdateQueAndAnsCompleted;
        
        /// <remarks/>
        public event DeleteQueAndAnsCompletedEventHandler DeleteQueAndAnsCompleted;
        
        /// <remarks/>
        public event GetCountByQuesCompletedEventHandler GetCountByQuesCompleted;
        
        /// <remarks/>
        public event GetAttachmentCompletedEventHandler GetAttachmentCompleted;
        
        /// <remarks/>
        public event GetVersionsCompletedEventHandler GetVersionsCompleted;
        
        /// <remarks/>
        public event InsertSiteCategoryCompletedEventHandler InsertSiteCategoryCompleted;
        
        /// <remarks/>
        public event ModifySiteCategoryCompletedEventHandler ModifySiteCategoryCompleted;
        
        /// <remarks/>
        public event DeleteSiteCategoryCompletedEventHandler DeleteSiteCategoryCompleted;
        
        /// <remarks/>
        public event GetSiteCategorysCompletedEventHandler GetSiteCategorysCompleted;
        
        /// <remarks/>
        public event InsertSiteTableCompletedEventHandler InsertSiteTableCompleted;
        
        /// <remarks/>
        public event ModifySiteTableCompletedEventHandler ModifySiteTableCompleted;
        
        /// <remarks/>
        public event DeleteSiteTableCompletedEventHandler DeleteSiteTableCompleted;
        
        /// <remarks/>
        public event GetSiteTablesCompletedEventHandler GetSiteTablesCompleted;
        
        /// <remarks/>
        public event GetSiteTableByCategoryCompletedEventHandler GetSiteTableByCategoryCompleted;
        
        /// <remarks/>
        public event GetFileByPathCompletedEventHandler GetFileByPathCompleted;
        
        /// <remarks/>
        public event GetNoticeRemindsWithNumCompletedEventHandler GetNoticeRemindsWithNumCompleted;
        
        /// <remarks/>
        public event GetOpenidCompletedEventHandler GetOpenidCompleted;
        
        /// <remarks/>
        public event GetCustomerEntityListCompletedEventHandler GetCustomerEntityListCompleted;
        
        /// <remarks/>
        public event GetAllSoftUpdateInfoCompletedEventHandler GetAllSoftUpdateInfoCompleted;
        
        /// <remarks/>
        public event ModifySoftUpdateInfoCompletedEventHandler ModifySoftUpdateInfoCompleted;
        
        /// <remarks/>
        public event AddSoftUpdateInfoCompletedEventHandler AddSoftUpdateInfoCompleted;
        
        /// <remarks/>
        public event DeleteSoftUpdateInfoCompletedEventHandler DeleteSoftUpdateInfoCompleted;
        
        /// <remarks/>
        public event GetAllInternetLinkCompletedEventHandler GetAllInternetLinkCompleted;
        
        /// <remarks/>
        public event ModifyInternetLinkCompletedEventHandler ModifyInternetLinkCompleted;
        
        /// <remarks/>
        public event AddInternetLinkCompletedEventHandler AddInternetLinkCompleted;
        
        /// <remarks/>
        public event DeleteInternetLinkCompletedEventHandler DeleteInternetLinkCompleted;
        
        /// <remarks/>
        public event UserClaimExistCompletedEventHandler UserClaimExistCompleted;
        
        /// <remarks/>
        public event GetAllTrialApplicationCompletedEventHandler GetAllTrialApplicationCompleted;
        
        /// <remarks/>
        public event UpdateTrialApplicationCompletedEventHandler UpdateTrialApplicationCompleted;
        
        /// <remarks/>
        public event AddTrialApplicationCompletedEventHandler AddTrialApplicationCompleted;
        
        /// <remarks/>
        public event DeleteTrialApplicationCompletedEventHandler DeleteTrialApplicationCompleted;
        
        /// <remarks/>
        public event AddCustFeedbackCompletedEventHandler AddCustFeedbackCompleted;
        
        /// <remarks/>
        public event DelCustFeedbackCompletedEventHandler DelCustFeedbackCompleted;
        
        /// <remarks/>
        public event GetAllCustFeedbackCompletedEventHandler GetAllCustFeedbackCompleted;
        
        /// <remarks/>
        public event GetAllMSAttentionCompletedEventHandler GetAllMSAttentionCompleted;
        
        /// <remarks/>
        public event UpdateMSAttentionCompletedEventHandler UpdateMSAttentionCompleted;
        
        /// <remarks/>
        public event AddMSAttentionCompletedEventHandler AddMSAttentionCompleted;
        
        /// <remarks/>
        public event DeleteMSAttentionCompletedEventHandler DeleteMSAttentionCompleted;
        
        /// <remarks/>
        public event GetChatPathCompletedEventHandler GetChatPathCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAllTypesAndCount", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesType[] GetAllTypesAndCount() {
            object[] results = this.Invoke("GetAllTypesAndCount", new object[0]);
            return ((QuesType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTypesAndCountAsync() {
            this.GetAllTypesAndCountAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTypesAndCountAsync(object userState) {
            if ((this.GetAllTypesAndCountOperationCompleted == null)) {
                this.GetAllTypesAndCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTypesAndCountOperationCompleted);
            }
            this.InvokeAsync("GetAllTypesAndCount", new object[0], this.GetAllTypesAndCountOperationCompleted, userState);
        }
        
        private void OnGetAllTypesAndCountOperationCompleted(object arg) {
            if ((this.GetAllTypesAndCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTypesAndCountCompleted(this, new GetAllTypesAndCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAllTypesAndCountToMyQues", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesType[] GetAllTypesAndCountToMyQues(string userid) {
            object[] results = this.Invoke("GetAllTypesAndCountToMyQues", new object[] {
                        userid});
            return ((QuesType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTypesAndCountToMyQuesAsync(string userid) {
            this.GetAllTypesAndCountToMyQuesAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetAllTypesAndCountToMyQuesAsync(string userid, object userState) {
            if ((this.GetAllTypesAndCountToMyQuesOperationCompleted == null)) {
                this.GetAllTypesAndCountToMyQuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTypesAndCountToMyQuesOperationCompleted);
            }
            this.InvokeAsync("GetAllTypesAndCountToMyQues", new object[] {
                        userid}, this.GetAllTypesAndCountToMyQuesOperationCompleted, userState);
        }
        
        private void OnGetAllTypesAndCountToMyQuesOperationCompleted(object arg) {
            if ((this.GetAllTypesAndCountToMyQuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTypesAndCountToMyQuesCompleted(this, new GetAllTypesAndCountToMyQuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuesAndAnswerByFilter", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesAndAnswerEntity[] GetQuesAndAnswerByFilter(string QuesType, string Board) {
            object[] results = this.Invoke("GetQuesAndAnswerByFilter", new object[] {
                        QuesType,
                        Board});
            return ((QuesAndAnswerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByFilterAsync(string QuesType, string Board) {
            this.GetQuesAndAnswerByFilterAsync(QuesType, Board, null);
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByFilterAsync(string QuesType, string Board, object userState) {
            if ((this.GetQuesAndAnswerByFilterOperationCompleted == null)) {
                this.GetQuesAndAnswerByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuesAndAnswerByFilterOperationCompleted);
            }
            this.InvokeAsync("GetQuesAndAnswerByFilter", new object[] {
                        QuesType,
                        Board}, this.GetQuesAndAnswerByFilterOperationCompleted, userState);
        }
        
        private void OnGetQuesAndAnswerByFilterOperationCompleted(object arg) {
            if ((this.GetQuesAndAnswerByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuesAndAnswerByFilterCompleted(this, new GetQuesAndAnswerByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuesAndAnswerByPage", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesAndAnswerEntity[] GetQuesAndAnswerByPage(string QuesType, string Board, int index, int size) {
            object[] results = this.Invoke("GetQuesAndAnswerByPage", new object[] {
                        QuesType,
                        Board,
                        index,
                        size});
            return ((QuesAndAnswerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByPageAsync(string QuesType, string Board, int index, int size) {
            this.GetQuesAndAnswerByPageAsync(QuesType, Board, index, size, null);
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByPageAsync(string QuesType, string Board, int index, int size, object userState) {
            if ((this.GetQuesAndAnswerByPageOperationCompleted == null)) {
                this.GetQuesAndAnswerByPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuesAndAnswerByPageOperationCompleted);
            }
            this.InvokeAsync("GetQuesAndAnswerByPage", new object[] {
                        QuesType,
                        Board,
                        index,
                        size}, this.GetQuesAndAnswerByPageOperationCompleted, userState);
        }
        
        private void OnGetQuesAndAnswerByPageOperationCompleted(object arg) {
            if ((this.GetQuesAndAnswerByPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuesAndAnswerByPageCompleted(this, new GetQuesAndAnswerByPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuesAndAnswerByFilterNew", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesAndAnswerEntity[] GetQuesAndAnswerByFilterNew(QuesAndAnswerFilter filter, int index, int size, out int intTotalRecord) {
            object[] results = this.Invoke("GetQuesAndAnswerByFilterNew", new object[] {
                        filter,
                        index,
                        size});
            intTotalRecord = ((int)(results[1]));
            return ((QuesAndAnswerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByFilterNewAsync(QuesAndAnswerFilter filter, int index, int size) {
            this.GetQuesAndAnswerByFilterNewAsync(filter, index, size, null);
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByFilterNewAsync(QuesAndAnswerFilter filter, int index, int size, object userState) {
            if ((this.GetQuesAndAnswerByFilterNewOperationCompleted == null)) {
                this.GetQuesAndAnswerByFilterNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuesAndAnswerByFilterNewOperationCompleted);
            }
            this.InvokeAsync("GetQuesAndAnswerByFilterNew", new object[] {
                        filter,
                        index,
                        size}, this.GetQuesAndAnswerByFilterNewOperationCompleted, userState);
        }
        
        private void OnGetQuesAndAnswerByFilterNewOperationCompleted(object arg) {
            if ((this.GetQuesAndAnswerByFilterNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuesAndAnswerByFilterNewCompleted(this, new GetQuesAndAnswerByFilterNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuesAndAnsweTotal", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetQuesAndAnsweTotal(string filtertxt) {
            object[] results = this.Invoke("GetQuesAndAnsweTotal", new object[] {
                        filtertxt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuesAndAnsweTotalAsync(string filtertxt) {
            this.GetQuesAndAnsweTotalAsync(filtertxt, null);
        }
        
        /// <remarks/>
        public void GetQuesAndAnsweTotalAsync(string filtertxt, object userState) {
            if ((this.GetQuesAndAnsweTotalOperationCompleted == null)) {
                this.GetQuesAndAnsweTotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuesAndAnsweTotalOperationCompleted);
            }
            this.InvokeAsync("GetQuesAndAnsweTotal", new object[] {
                        filtertxt}, this.GetQuesAndAnsweTotalOperationCompleted, userState);
        }
        
        private void OnGetQuesAndAnsweTotalOperationCompleted(object arg) {
            if ((this.GetQuesAndAnsweTotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuesAndAnsweTotalCompleted(this, new GetQuesAndAnsweTotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuesAndAnsweBase64Total", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetQuesAndAnsweBase64Total(string filtertxt) {
            object[] results = this.Invoke("GetQuesAndAnsweBase64Total", new object[] {
                        filtertxt});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuesAndAnsweBase64TotalAsync(string filtertxt) {
            this.GetQuesAndAnsweBase64TotalAsync(filtertxt, null);
        }
        
        /// <remarks/>
        public void GetQuesAndAnsweBase64TotalAsync(string filtertxt, object userState) {
            if ((this.GetQuesAndAnsweBase64TotalOperationCompleted == null)) {
                this.GetQuesAndAnsweBase64TotalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuesAndAnsweBase64TotalOperationCompleted);
            }
            this.InvokeAsync("GetQuesAndAnsweBase64Total", new object[] {
                        filtertxt}, this.GetQuesAndAnsweBase64TotalOperationCompleted, userState);
        }
        
        private void OnGetQuesAndAnsweBase64TotalOperationCompleted(object arg) {
            if ((this.GetQuesAndAnsweBase64TotalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuesAndAnsweBase64TotalCompleted(this, new GetQuesAndAnsweBase64TotalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuesAndAnswerByQueryWord", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesAndAnswerEntity[] GetQuesAndAnswerByQueryWord(string QueryWord) {
            object[] results = this.Invoke("GetQuesAndAnswerByQueryWord", new object[] {
                        QueryWord});
            return ((QuesAndAnswerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByQueryWordAsync(string QueryWord) {
            this.GetQuesAndAnswerByQueryWordAsync(QueryWord, null);
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByQueryWordAsync(string QueryWord, object userState) {
            if ((this.GetQuesAndAnswerByQueryWordOperationCompleted == null)) {
                this.GetQuesAndAnswerByQueryWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuesAndAnswerByQueryWordOperationCompleted);
            }
            this.InvokeAsync("GetQuesAndAnswerByQueryWord", new object[] {
                        QueryWord}, this.GetQuesAndAnswerByQueryWordOperationCompleted, userState);
        }
        
        private void OnGetQuesAndAnswerByQueryWordOperationCompleted(object arg) {
            if ((this.GetQuesAndAnswerByQueryWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuesAndAnswerByQueryWordCompleted(this, new GetQuesAndAnswerByQueryWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuesAndAnswerByMyQuesPage", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesAndAnswerEntity[] GetQuesAndAnswerByMyQuesPage(string QuesType, string userid, int index, int size) {
            object[] results = this.Invoke("GetQuesAndAnswerByMyQuesPage", new object[] {
                        QuesType,
                        userid,
                        index,
                        size});
            return ((QuesAndAnswerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByMyQuesPageAsync(string QuesType, string userid, int index, int size) {
            this.GetQuesAndAnswerByMyQuesPageAsync(QuesType, userid, index, size, null);
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByMyQuesPageAsync(string QuesType, string userid, int index, int size, object userState) {
            if ((this.GetQuesAndAnswerByMyQuesPageOperationCompleted == null)) {
                this.GetQuesAndAnswerByMyQuesPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuesAndAnswerByMyQuesPageOperationCompleted);
            }
            this.InvokeAsync("GetQuesAndAnswerByMyQuesPage", new object[] {
                        QuesType,
                        userid,
                        index,
                        size}, this.GetQuesAndAnswerByMyQuesPageOperationCompleted, userState);
        }
        
        private void OnGetQuesAndAnswerByMyQuesPageOperationCompleted(object arg) {
            if ((this.GetQuesAndAnswerByMyQuesPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuesAndAnswerByMyQuesPageCompleted(this, new GetQuesAndAnswerByMyQuesPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuesAndAnswerByFilter1", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesAndAnswerEntity[] GetQuesAndAnswerByFilter1(string[] QuesType, string Board) {
            object[] results = this.Invoke("GetQuesAndAnswerByFilter1", new object[] {
                        QuesType,
                        Board});
            return ((QuesAndAnswerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByFilter1Async(string[] QuesType, string Board) {
            this.GetQuesAndAnswerByFilter1Async(QuesType, Board, null);
        }
        
        /// <remarks/>
        public void GetQuesAndAnswerByFilter1Async(string[] QuesType, string Board, object userState) {
            if ((this.GetQuesAndAnswerByFilter1OperationCompleted == null)) {
                this.GetQuesAndAnswerByFilter1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuesAndAnswerByFilter1OperationCompleted);
            }
            this.InvokeAsync("GetQuesAndAnswerByFilter1", new object[] {
                        QuesType,
                        Board}, this.GetQuesAndAnswerByFilter1OperationCompleted, userState);
        }
        
        private void OnGetQuesAndAnswerByFilter1OperationCompleted(object arg) {
            if ((this.GetQuesAndAnswerByFilter1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuesAndAnswerByFilter1Completed(this, new GetQuesAndAnswerByFilter1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAllTypes", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetAllTypes() {
            object[] results = this.Invoke("GetAllTypes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTypesAsync() {
            this.GetAllTypesAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTypesAsync(object userState) {
            if ((this.GetAllTypesOperationCompleted == null)) {
                this.GetAllTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTypesOperationCompleted);
            }
            this.InvokeAsync("GetAllTypes", new object[0], this.GetAllTypesOperationCompleted, userState);
        }
        
        private void OnGetAllTypesOperationCompleted(object arg) {
            if ((this.GetAllTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTypesCompleted(this, new GetAllTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetCategorys", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCategorys() {
            object[] results = this.Invoke("GetCategorys", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCategorysAsync() {
            this.GetCategorysAsync(null);
        }
        
        /// <remarks/>
        public void GetCategorysAsync(object userState) {
            if ((this.GetCategorysOperationCompleted == null)) {
                this.GetCategorysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategorysOperationCompleted);
            }
            this.InvokeAsync("GetCategorys", new object[0], this.GetCategorysOperationCompleted, userState);
        }
        
        private void OnGetCategorysOperationCompleted(object arg) {
            if ((this.GetCategorysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategorysCompleted(this, new GetCategorysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetQuestionByUnAnswer", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QuesAndAnswerEntity[] GetQuestionByUnAnswer() {
            object[] results = this.Invoke("GetQuestionByUnAnswer", new object[0]);
            return ((QuesAndAnswerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetQuestionByUnAnswerAsync() {
            this.GetQuestionByUnAnswerAsync(null);
        }
        
        /// <remarks/>
        public void GetQuestionByUnAnswerAsync(object userState) {
            if ((this.GetQuestionByUnAnswerOperationCompleted == null)) {
                this.GetQuestionByUnAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuestionByUnAnswerOperationCompleted);
            }
            this.InvokeAsync("GetQuestionByUnAnswer", new object[0], this.GetQuestionByUnAnswerOperationCompleted, userState);
        }
        
        private void OnGetQuestionByUnAnswerOperationCompleted(object arg) {
            if ((this.GetQuestionByUnAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuestionByUnAnswerCompleted(this, new GetQuestionByUnAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UsingMD5", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UsingMD5(string password) {
            object[] results = this.Invoke("UsingMD5", new object[] {
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UsingMD5Async(string password) {
            this.UsingMD5Async(password, null);
        }
        
        /// <remarks/>
        public void UsingMD5Async(string password, object userState) {
            if ((this.UsingMD5OperationCompleted == null)) {
                this.UsingMD5OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUsingMD5OperationCompleted);
            }
            this.InvokeAsync("UsingMD5", new object[] {
                        password}, this.UsingMD5OperationCompleted, userState);
        }
        
        private void OnUsingMD5OperationCompleted(object arg) {
            if ((this.UsingMD5Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UsingMD5Completed(this, new UsingMD5CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/Hello", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Hello(string MicroSignal) {
            object[] results = this.Invoke("Hello", new object[] {
                        MicroSignal});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloAsync(string MicroSignal) {
            this.HelloAsync(MicroSignal, null);
        }
        
        /// <remarks/>
        public void HelloAsync(string MicroSignal, object userState) {
            if ((this.HelloOperationCompleted == null)) {
                this.HelloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloOperationCompleted);
            }
            this.InvokeAsync("Hello", new object[] {
                        MicroSignal}, this.HelloOperationCompleted, userState);
        }
        
        private void OnHelloOperationCompleted(object arg) {
            if ((this.HelloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloCompleted(this, new HelloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/IsBinding", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object IsBinding(string MicroSignal) {
            object[] results = this.Invoke("IsBinding", new object[] {
                        MicroSignal});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void IsBindingAsync(string MicroSignal) {
            this.IsBindingAsync(MicroSignal, null);
        }
        
        /// <remarks/>
        public void IsBindingAsync(string MicroSignal, object userState) {
            if ((this.IsBindingOperationCompleted == null)) {
                this.IsBindingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsBindingOperationCompleted);
            }
            this.InvokeAsync("IsBinding", new object[] {
                        MicroSignal}, this.IsBindingOperationCompleted, userState);
        }
        
        private void OnIsBindingOperationCompleted(object arg) {
            if ((this.IsBindingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsBindingCompleted(this, new IsBindingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/MicroSignalBinding", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MicroSignalBinding(string Email, string MicroSignal, string Password) {
            object[] results = this.Invoke("MicroSignalBinding", new object[] {
                        Email,
                        MicroSignal,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MicroSignalBindingAsync(string Email, string MicroSignal, string Password) {
            this.MicroSignalBindingAsync(Email, MicroSignal, Password, null);
        }
        
        /// <remarks/>
        public void MicroSignalBindingAsync(string Email, string MicroSignal, string Password, object userState) {
            if ((this.MicroSignalBindingOperationCompleted == null)) {
                this.MicroSignalBindingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMicroSignalBindingOperationCompleted);
            }
            this.InvokeAsync("MicroSignalBinding", new object[] {
                        Email,
                        MicroSignal,
                        Password}, this.MicroSignalBindingOperationCompleted, userState);
        }
        
        private void OnMicroSignalBindingOperationCompleted(object arg) {
            if ((this.MicroSignalBindingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MicroSignalBindingCompleted(this, new MicroSignalBindingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/CancelBinding", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CancelBinding(string MicroSignal) {
            object[] results = this.Invoke("CancelBinding", new object[] {
                        MicroSignal});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CancelBindingAsync(string MicroSignal) {
            this.CancelBindingAsync(MicroSignal, null);
        }
        
        /// <remarks/>
        public void CancelBindingAsync(string MicroSignal, object userState) {
            if ((this.CancelBindingOperationCompleted == null)) {
                this.CancelBindingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelBindingOperationCompleted);
            }
            this.InvokeAsync("CancelBinding", new object[] {
                        MicroSignal}, this.CancelBindingOperationCompleted, userState);
        }
        
        private void OnCancelBindingOperationCompleted(object arg) {
            if ((this.CancelBindingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelBindingCompleted(this, new CancelBindingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/EmailResgist", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public object EmailResgist(string Email, string nickName, string realName, string Password, string phoneNumber, string companyCode, string microsign, string simpleName) {
            object[] results = this.Invoke("EmailResgist", new object[] {
                        Email,
                        nickName,
                        realName,
                        Password,
                        phoneNumber,
                        companyCode,
                        microsign,
                        simpleName});
            return ((object)(results[0]));
        }
        
        /// <remarks/>
        public void EmailResgistAsync(string Email, string nickName, string realName, string Password, string phoneNumber, string companyCode, string microsign, string simpleName) {
            this.EmailResgistAsync(Email, nickName, realName, Password, phoneNumber, companyCode, microsign, simpleName, null);
        }
        
        /// <remarks/>
        public void EmailResgistAsync(string Email, string nickName, string realName, string Password, string phoneNumber, string companyCode, string microsign, string simpleName, object userState) {
            if ((this.EmailResgistOperationCompleted == null)) {
                this.EmailResgistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEmailResgistOperationCompleted);
            }
            this.InvokeAsync("EmailResgist", new object[] {
                        Email,
                        nickName,
                        realName,
                        Password,
                        phoneNumber,
                        companyCode,
                        microsign,
                        simpleName}, this.EmailResgistOperationCompleted, userState);
        }
        
        private void OnEmailResgistOperationCompleted(object arg) {
            if ((this.EmailResgistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EmailResgistCompleted(this, new EmailResgistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/ForgetPassword", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ForgetPassword(string email) {
            object[] results = this.Invoke("ForgetPassword", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ForgetPasswordAsync(string email) {
            this.ForgetPasswordAsync(email, null);
        }
        
        /// <remarks/>
        public void ForgetPasswordAsync(string email, object userState) {
            if ((this.ForgetPasswordOperationCompleted == null)) {
                this.ForgetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgetPasswordOperationCompleted);
            }
            this.InvokeAsync("ForgetPassword", new object[] {
                        email}, this.ForgetPasswordOperationCompleted, userState);
        }
        
        private void OnForgetPasswordOperationCompleted(object arg) {
            if ((this.ForgetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgetPasswordCompleted(this, new ForgetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/InitPassword", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InitPassword(string email, string newPwd, string token) {
            object[] results = this.Invoke("InitPassword", new object[] {
                        email,
                        newPwd,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InitPasswordAsync(string email, string newPwd, string token) {
            this.InitPasswordAsync(email, newPwd, token, null);
        }
        
        /// <remarks/>
        public void InitPasswordAsync(string email, string newPwd, string token, object userState) {
            if ((this.InitPasswordOperationCompleted == null)) {
                this.InitPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitPasswordOperationCompleted);
            }
            this.InvokeAsync("InitPassword", new object[] {
                        email,
                        newPwd,
                        token}, this.InitPasswordOperationCompleted, userState);
        }
        
        private void OnInitPasswordOperationCompleted(object arg) {
            if ((this.InitPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitPasswordCompleted(this, new InitPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UserLogin", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserLogin(string AccountName, string Password) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        AccountName,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string AccountName, string Password) {
            this.UserLoginAsync(AccountName, Password, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string AccountName, string Password, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        AccountName,
                        Password}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UserResgist", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserResgist(UserEntity entity) {
            object[] results = this.Invoke("UserResgist", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserResgistAsync(UserEntity entity) {
            this.UserResgistAsync(entity, null);
        }
        
        /// <remarks/>
        public void UserResgistAsync(UserEntity entity, object userState) {
            if ((this.UserResgistOperationCompleted == null)) {
                this.UserResgistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserResgistOperationCompleted);
            }
            this.InvokeAsync("UserResgist", new object[] {
                        entity}, this.UserResgistOperationCompleted, userState);
        }
        
        private void OnUserResgistOperationCompleted(object arg) {
            if ((this.UserResgistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserResgistCompleted(this, new UserResgistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UserResgistClient", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserResgistClient(UserEntity entity, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string extension) {
            object[] results = this.Invoke("UserResgistClient", new object[] {
                        entity,
                        data,
                        extension});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserResgistClientAsync(UserEntity entity, byte[] data, string extension) {
            this.UserResgistClientAsync(entity, data, extension, null);
        }
        
        /// <remarks/>
        public void UserResgistClientAsync(UserEntity entity, byte[] data, string extension, object userState) {
            if ((this.UserResgistClientOperationCompleted == null)) {
                this.UserResgistClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserResgistClientOperationCompleted);
            }
            this.InvokeAsync("UserResgistClient", new object[] {
                        entity,
                        data,
                        extension}, this.UserResgistClientOperationCompleted, userState);
        }
        
        private void OnUserResgistClientOperationCompleted(object arg) {
            if ((this.UserResgistClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserResgistClientCompleted(this, new UserResgistClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/ModifyUser", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyUser(UserEntity entity) {
            object[] results = this.Invoke("ModifyUser", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUserAsync(UserEntity entity) {
            this.ModifyUserAsync(entity, null);
        }
        
        /// <remarks/>
        public void ModifyUserAsync(UserEntity entity, object userState) {
            if ((this.ModifyUserOperationCompleted == null)) {
                this.ModifyUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserOperationCompleted);
            }
            this.InvokeAsync("ModifyUser", new object[] {
                        entity}, this.ModifyUserOperationCompleted, userState);
        }
        
        private void OnModifyUserOperationCompleted(object arg) {
            if ((this.ModifyUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserCompleted(this, new ModifyUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/ModifyUserImage", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ModifyUserImage([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] data, string extension, string ID) {
            object[] results = this.Invoke("ModifyUserImage", new object[] {
                        data,
                        extension,
                        ID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyUserImageAsync(byte[] data, string extension, string ID) {
            this.ModifyUserImageAsync(data, extension, ID, null);
        }
        
        /// <remarks/>
        public void ModifyUserImageAsync(byte[] data, string extension, string ID, object userState) {
            if ((this.ModifyUserImageOperationCompleted == null)) {
                this.ModifyUserImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyUserImageOperationCompleted);
            }
            this.InvokeAsync("ModifyUserImage", new object[] {
                        data,
                        extension,
                        ID}, this.ModifyUserImageOperationCompleted, userState);
        }
        
        private void OnModifyUserImageOperationCompleted(object arg) {
            if ((this.ModifyUserImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyUserImageCompleted(this, new ModifyUserImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetUserAndPwd", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUserAndPwd() {
            object[] results = this.Invoke("GetUserAndPwd", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUserAndPwdAsync() {
            this.GetUserAndPwdAsync(null);
        }
        
        /// <remarks/>
        public void GetUserAndPwdAsync(object userState) {
            if ((this.GetUserAndPwdOperationCompleted == null)) {
                this.GetUserAndPwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserAndPwdOperationCompleted);
            }
            this.InvokeAsync("GetUserAndPwd", new object[0], this.GetUserAndPwdOperationCompleted, userState);
        }
        
        private void OnGetUserAndPwdOperationCompleted(object arg) {
            if ((this.GetUserAndPwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserAndPwdCompleted(this, new GetUserAndPwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetUserById", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserEntity GetUserById(string emailId) {
            object[] results = this.Invoke("GetUserById", new object[] {
                        emailId});
            return ((UserEntity)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(string emailId) {
            this.GetUserByIdAsync(emailId, null);
        }
        
        /// <remarks/>
        public void GetUserByIdAsync(string emailId, object userState) {
            if ((this.GetUserByIdOperationCompleted == null)) {
                this.GetUserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIdOperationCompleted);
            }
            this.InvokeAsync("GetUserById", new object[] {
                        emailId}, this.GetUserByIdOperationCompleted, userState);
        }
        
        private void OnGetUserByIdOperationCompleted(object arg) {
            if ((this.GetUserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIdCompleted(this, new GetUserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetUsers", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserEntity[] GetUsers() {
            object[] results = this.Invoke("GetUsers", new object[0]);
            return ((UserEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[0], this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/InsertUKey", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertUKey(UKeyEntity entity) {
            object[] results = this.Invoke("InsertUKey", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertUKeyAsync(UKeyEntity entity) {
            this.InsertUKeyAsync(entity, null);
        }
        
        /// <remarks/>
        public void InsertUKeyAsync(UKeyEntity entity, object userState) {
            if ((this.InsertUKeyOperationCompleted == null)) {
                this.InsertUKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertUKeyOperationCompleted);
            }
            this.InvokeAsync("InsertUKey", new object[] {
                        entity}, this.InsertUKeyOperationCompleted, userState);
        }
        
        private void OnInsertUKeyOperationCompleted(object arg) {
            if ((this.InsertUKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertUKeyCompleted(this, new InsertUKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetValidateById", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetValidateById(string UserId) {
            object[] results = this.Invoke("GetValidateById", new object[] {
                        UserId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidateByIdAsync(string UserId) {
            this.GetValidateByIdAsync(UserId, null);
        }
        
        /// <remarks/>
        public void GetValidateByIdAsync(string UserId, object userState) {
            if ((this.GetValidateByIdOperationCompleted == null)) {
                this.GetValidateByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidateByIdOperationCompleted);
            }
            this.InvokeAsync("GetValidateById", new object[] {
                        UserId}, this.GetValidateByIdOperationCompleted, userState);
        }
        
        private void OnGetValidateByIdOperationCompleted(object arg) {
            if ((this.GetValidateByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidateByIdCompleted(this, new GetValidateByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetValidateByEmail", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetValidateByEmail(string email) {
            object[] results = this.Invoke("GetValidateByEmail", new object[] {
                        email});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetValidateByEmailAsync(string email) {
            this.GetValidateByEmailAsync(email, null);
        }
        
        /// <remarks/>
        public void GetValidateByEmailAsync(string email, object userState) {
            if ((this.GetValidateByEmailOperationCompleted == null)) {
                this.GetValidateByEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetValidateByEmailOperationCompleted);
            }
            this.InvokeAsync("GetValidateByEmail", new object[] {
                        email}, this.GetValidateByEmailOperationCompleted, userState);
        }
        
        private void OnGetValidateByEmailOperationCompleted(object arg) {
            if ((this.GetValidateByEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetValidateByEmailCompleted(this, new GetValidateByEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/InsertMessage", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertMessage(MessageEntity entity) {
            object[] results = this.Invoke("InsertMessage", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMessageAsync(MessageEntity entity) {
            this.InsertMessageAsync(entity, null);
        }
        
        /// <remarks/>
        public void InsertMessageAsync(MessageEntity entity, object userState) {
            if ((this.InsertMessageOperationCompleted == null)) {
                this.InsertMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMessageOperationCompleted);
            }
            this.InvokeAsync("InsertMessage", new object[] {
                        entity}, this.InsertMessageOperationCompleted, userState);
        }
        
        private void OnInsertMessageOperationCompleted(object arg) {
            if ((this.InsertMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMessageCompleted(this, new InsertMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetMessageByFilter", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageEntity[] GetMessageByFilter(string userIdPost, string userIdAccept, string EventId) {
            object[] results = this.Invoke("GetMessageByFilter", new object[] {
                        userIdPost,
                        userIdAccept,
                        EventId});
            return ((MessageEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageByFilterAsync(string userIdPost, string userIdAccept, string EventId) {
            this.GetMessageByFilterAsync(userIdPost, userIdAccept, EventId, null);
        }
        
        /// <remarks/>
        public void GetMessageByFilterAsync(string userIdPost, string userIdAccept, string EventId, object userState) {
            if ((this.GetMessageByFilterOperationCompleted == null)) {
                this.GetMessageByFilterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageByFilterOperationCompleted);
            }
            this.InvokeAsync("GetMessageByFilter", new object[] {
                        userIdPost,
                        userIdAccept,
                        EventId}, this.GetMessageByFilterOperationCompleted, userState);
        }
        
        private void OnGetMessageByFilterOperationCompleted(object arg) {
            if ((this.GetMessageByFilterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageByFilterCompleted(this, new GetMessageByFilterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetMessageByNewDate", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageEntity[] GetMessageByNewDate(string userIdPost, string userIdAccept, string EventId, string date) {
            object[] results = this.Invoke("GetMessageByNewDate", new object[] {
                        userIdPost,
                        userIdAccept,
                        EventId,
                        date});
            return ((MessageEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageByNewDateAsync(string userIdPost, string userIdAccept, string EventId, string date) {
            this.GetMessageByNewDateAsync(userIdPost, userIdAccept, EventId, date, null);
        }
        
        /// <remarks/>
        public void GetMessageByNewDateAsync(string userIdPost, string userIdAccept, string EventId, string date, object userState) {
            if ((this.GetMessageByNewDateOperationCompleted == null)) {
                this.GetMessageByNewDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageByNewDateOperationCompleted);
            }
            this.InvokeAsync("GetMessageByNewDate", new object[] {
                        userIdPost,
                        userIdAccept,
                        EventId,
                        date}, this.GetMessageByNewDateOperationCompleted, userState);
        }
        
        private void OnGetMessageByNewDateOperationCompleted(object arg) {
            if ((this.GetMessageByNewDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageByNewDateCompleted(this, new GetMessageByNewDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/AddMessage", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddMessage(string userId, MessageEntity entity, AttachmentEntity[] attachlist, out System.DateTime date) {
            object[] results = this.Invoke("AddMessage", new object[] {
                        userId,
                        entity,
                        attachlist});
            date = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddMessageAsync(string userId, MessageEntity entity, AttachmentEntity[] attachlist) {
            this.AddMessageAsync(userId, entity, attachlist, null);
        }
        
        /// <remarks/>
        public void AddMessageAsync(string userId, MessageEntity entity, AttachmentEntity[] attachlist, object userState) {
            if ((this.AddMessageOperationCompleted == null)) {
                this.AddMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMessageOperationCompleted);
            }
            this.InvokeAsync("AddMessage", new object[] {
                        userId,
                        entity,
                        attachlist}, this.AddMessageOperationCompleted, userState);
        }
        
        private void OnAddMessageOperationCompleted(object arg) {
            if ((this.AddMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMessageCompleted(this, new AddMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/AddAttachment", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddAttachment(string userId, MessageEntity entity, AttachmentEntity[] attachlist, out System.DateTime date) {
            object[] results = this.Invoke("AddAttachment", new object[] {
                        userId,
                        entity,
                        attachlist});
            date = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAttachmentAsync(string userId, MessageEntity entity, AttachmentEntity[] attachlist) {
            this.AddAttachmentAsync(userId, entity, attachlist, null);
        }
        
        /// <remarks/>
        public void AddAttachmentAsync(string userId, MessageEntity entity, AttachmentEntity[] attachlist, object userState) {
            if ((this.AddAttachmentOperationCompleted == null)) {
                this.AddAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachmentOperationCompleted);
            }
            this.InvokeAsync("AddAttachment", new object[] {
                        userId,
                        entity,
                        attachlist}, this.AddAttachmentOperationCompleted, userState);
        }
        
        private void OnAddAttachmentOperationCompleted(object arg) {
            if ((this.AddAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAttachmentCompleted(this, new AddAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/AddAttachment_Ques_Answer", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddAttachment_Ques_Answer(string userid, string attid, AttachmentEntity[] attachlist, out System.DateTime date) {
            object[] results = this.Invoke("AddAttachment_Ques_Answer", new object[] {
                        userid,
                        attid,
                        attachlist});
            date = ((System.DateTime)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddAttachment_Ques_AnswerAsync(string userid, string attid, AttachmentEntity[] attachlist) {
            this.AddAttachment_Ques_AnswerAsync(userid, attid, attachlist, null);
        }
        
        /// <remarks/>
        public void AddAttachment_Ques_AnswerAsync(string userid, string attid, AttachmentEntity[] attachlist, object userState) {
            if ((this.AddAttachment_Ques_AnswerOperationCompleted == null)) {
                this.AddAttachment_Ques_AnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAttachment_Ques_AnswerOperationCompleted);
            }
            this.InvokeAsync("AddAttachment_Ques_Answer", new object[] {
                        userid,
                        attid,
                        attachlist}, this.AddAttachment_Ques_AnswerOperationCompleted, userState);
        }
        
        private void OnAddAttachment_Ques_AnswerOperationCompleted(object arg) {
            if ((this.AddAttachment_Ques_AnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAttachment_Ques_AnswerCompleted(this, new AddAttachment_Ques_AnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetMessageByPostAccept", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageEntity[] GetMessageByPostAccept(string userId) {
            object[] results = this.Invoke("GetMessageByPostAccept", new object[] {
                        userId});
            return ((MessageEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageByPostAcceptAsync(string userId) {
            this.GetMessageByPostAcceptAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetMessageByPostAcceptAsync(string userId, object userState) {
            if ((this.GetMessageByPostAcceptOperationCompleted == null)) {
                this.GetMessageByPostAcceptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageByPostAcceptOperationCompleted);
            }
            this.InvokeAsync("GetMessageByPostAccept", new object[] {
                        userId}, this.GetMessageByPostAcceptOperationCompleted, userState);
        }
        
        private void OnGetMessageByPostAcceptOperationCompleted(object arg) {
            if ((this.GetMessageByPostAcceptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageByPostAcceptCompleted(this, new GetMessageByPostAcceptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetMessageByFilterNew", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageEntity[] GetMessageByFilterNew(MessageEntityFilter filter, int index, int size, out int intTotalRecord) {
            object[] results = this.Invoke("GetMessageByFilterNew", new object[] {
                        filter,
                        index,
                        size});
            intTotalRecord = ((int)(results[1]));
            return ((MessageEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageByFilterNewAsync(MessageEntityFilter filter, int index, int size) {
            this.GetMessageByFilterNewAsync(filter, index, size, null);
        }
        
        /// <remarks/>
        public void GetMessageByFilterNewAsync(MessageEntityFilter filter, int index, int size, object userState) {
            if ((this.GetMessageByFilterNewOperationCompleted == null)) {
                this.GetMessageByFilterNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageByFilterNewOperationCompleted);
            }
            this.InvokeAsync("GetMessageByFilterNew", new object[] {
                        filter,
                        index,
                        size}, this.GetMessageByFilterNewOperationCompleted, userState);
        }
        
        private void OnGetMessageByFilterNewOperationCompleted(object arg) {
            if ((this.GetMessageByFilterNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageByFilterNewCompleted(this, new GetMessageByFilterNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/IsClaimMessage", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsClaimMessage(bool isclaim, string ClaimPeople, string eventId) {
            object[] results = this.Invoke("IsClaimMessage", new object[] {
                        isclaim,
                        ClaimPeople,
                        eventId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsClaimMessageAsync(bool isclaim, string ClaimPeople, string eventId) {
            this.IsClaimMessageAsync(isclaim, ClaimPeople, eventId, null);
        }
        
        /// <remarks/>
        public void IsClaimMessageAsync(bool isclaim, string ClaimPeople, string eventId, object userState) {
            if ((this.IsClaimMessageOperationCompleted == null)) {
                this.IsClaimMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsClaimMessageOperationCompleted);
            }
            this.InvokeAsync("IsClaimMessage", new object[] {
                        isclaim,
                        ClaimPeople,
                        eventId}, this.IsClaimMessageOperationCompleted, userState);
        }
        
        private void OnIsClaimMessageOperationCompleted(object arg) {
            if ((this.IsClaimMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsClaimMessageCompleted(this, new IsClaimMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetClaimMessage", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MessageEntity[] GetClaimMessage(string isclaim) {
            object[] results = this.Invoke("GetClaimMessage", new object[] {
                        isclaim});
            return ((MessageEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetClaimMessageAsync(string isclaim) {
            this.GetClaimMessageAsync(isclaim, null);
        }
        
        /// <remarks/>
        public void GetClaimMessageAsync(string isclaim, object userState) {
            if ((this.GetClaimMessageOperationCompleted == null)) {
                this.GetClaimMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClaimMessageOperationCompleted);
            }
            this.InvokeAsync("GetClaimMessage", new object[] {
                        isclaim}, this.GetClaimMessageOperationCompleted, userState);
        }
        
        private void OnGetClaimMessageOperationCompleted(object arg) {
            if ((this.GetClaimMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClaimMessageCompleted(this, new GetClaimMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetClaimState", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetClaimState(string eventid) {
            object[] results = this.Invoke("GetClaimState", new object[] {
                        eventid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetClaimStateAsync(string eventid) {
            this.GetClaimStateAsync(eventid, null);
        }
        
        /// <remarks/>
        public void GetClaimStateAsync(string eventid, object userState) {
            if ((this.GetClaimStateOperationCompleted == null)) {
                this.GetClaimStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClaimStateOperationCompleted);
            }
            this.InvokeAsync("GetClaimState", new object[] {
                        eventid}, this.GetClaimStateOperationCompleted, userState);
        }
        
        private void OnGetClaimStateOperationCompleted(object arg) {
            if ((this.GetClaimStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClaimStateCompleted(this, new GetClaimStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UpdateMessageReaded", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMessageReaded(string[] messageIdS) {
            object[] results = this.Invoke("UpdateMessageReaded", new object[] {
                        messageIdS});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMessageReadedAsync(string[] messageIdS) {
            this.UpdateMessageReadedAsync(messageIdS, null);
        }
        
        /// <remarks/>
        public void UpdateMessageReadedAsync(string[] messageIdS, object userState) {
            if ((this.UpdateMessageReadedOperationCompleted == null)) {
                this.UpdateMessageReadedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMessageReadedOperationCompleted);
            }
            this.InvokeAsync("UpdateMessageReaded", new object[] {
                        messageIdS}, this.UpdateMessageReadedOperationCompleted, userState);
        }
        
        private void OnUpdateMessageReadedOperationCompleted(object arg) {
            if ((this.UpdateMessageReadedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMessageReadedCompleted(this, new UpdateMessageReadedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/InsertQueAndAns", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertQueAndAns(QuesAndAnswerEntity entity) {
            object[] results = this.Invoke("InsertQueAndAns", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertQueAndAnsAsync(QuesAndAnswerEntity entity) {
            this.InsertQueAndAnsAsync(entity, null);
        }
        
        /// <remarks/>
        public void InsertQueAndAnsAsync(QuesAndAnswerEntity entity, object userState) {
            if ((this.InsertQueAndAnsOperationCompleted == null)) {
                this.InsertQueAndAnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertQueAndAnsOperationCompleted);
            }
            this.InvokeAsync("InsertQueAndAns", new object[] {
                        entity}, this.InsertQueAndAnsOperationCompleted, userState);
        }
        
        private void OnInsertQueAndAnsOperationCompleted(object arg) {
            if ((this.InsertQueAndAnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertQueAndAnsCompleted(this, new InsertQueAndAnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/InsertMyQueAndAns", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertMyQueAndAns(MyQuesAndAnswerEntity entity) {
            object[] results = this.Invoke("InsertMyQueAndAns", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertMyQueAndAnsAsync(MyQuesAndAnswerEntity entity) {
            this.InsertMyQueAndAnsAsync(entity, null);
        }
        
        /// <remarks/>
        public void InsertMyQueAndAnsAsync(MyQuesAndAnswerEntity entity, object userState) {
            if ((this.InsertMyQueAndAnsOperationCompleted == null)) {
                this.InsertMyQueAndAnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertMyQueAndAnsOperationCompleted);
            }
            this.InvokeAsync("InsertMyQueAndAns", new object[] {
                        entity}, this.InsertMyQueAndAnsOperationCompleted, userState);
        }
        
        private void OnInsertMyQueAndAnsOperationCompleted(object arg) {
            if ((this.InsertMyQueAndAnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertMyQueAndAnsCompleted(this, new InsertMyQueAndAnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UpdateQueAndAns", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateQueAndAns(QuesAndAnswerEntity entity) {
            object[] results = this.Invoke("UpdateQueAndAns", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateQueAndAnsAsync(QuesAndAnswerEntity entity) {
            this.UpdateQueAndAnsAsync(entity, null);
        }
        
        /// <remarks/>
        public void UpdateQueAndAnsAsync(QuesAndAnswerEntity entity, object userState) {
            if ((this.UpdateQueAndAnsOperationCompleted == null)) {
                this.UpdateQueAndAnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateQueAndAnsOperationCompleted);
            }
            this.InvokeAsync("UpdateQueAndAns", new object[] {
                        entity}, this.UpdateQueAndAnsOperationCompleted, userState);
        }
        
        private void OnUpdateQueAndAnsOperationCompleted(object arg) {
            if ((this.UpdateQueAndAnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateQueAndAnsCompleted(this, new UpdateQueAndAnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/DeleteQueAndAns", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteQueAndAns(string id) {
            object[] results = this.Invoke("DeleteQueAndAns", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteQueAndAnsAsync(string id) {
            this.DeleteQueAndAnsAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteQueAndAnsAsync(string id, object userState) {
            if ((this.DeleteQueAndAnsOperationCompleted == null)) {
                this.DeleteQueAndAnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteQueAndAnsOperationCompleted);
            }
            this.InvokeAsync("DeleteQueAndAns", new object[] {
                        id}, this.DeleteQueAndAnsOperationCompleted, userState);
        }
        
        private void OnDeleteQueAndAnsOperationCompleted(object arg) {
            if ((this.DeleteQueAndAnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteQueAndAnsCompleted(this, new DeleteQueAndAnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetCountByQues", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountByQues() {
            object[] results = this.Invoke("GetCountByQues", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountByQuesAsync() {
            this.GetCountByQuesAsync(null);
        }
        
        /// <remarks/>
        public void GetCountByQuesAsync(object userState) {
            if ((this.GetCountByQuesOperationCompleted == null)) {
                this.GetCountByQuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountByQuesOperationCompleted);
            }
            this.InvokeAsync("GetCountByQues", new object[0], this.GetCountByQuesOperationCompleted, userState);
        }
        
        private void OnGetCountByQuesOperationCompleted(object arg) {
            if ((this.GetCountByQuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountByQuesCompleted(this, new GetCountByQuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAttachment", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AttachmentEntity[] GetAttachment(string AttachId) {
            object[] results = this.Invoke("GetAttachment", new object[] {
                        AttachId});
            return ((AttachmentEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentAsync(string AttachId) {
            this.GetAttachmentAsync(AttachId, null);
        }
        
        /// <remarks/>
        public void GetAttachmentAsync(string AttachId, object userState) {
            if ((this.GetAttachmentOperationCompleted == null)) {
                this.GetAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentOperationCompleted);
            }
            this.InvokeAsync("GetAttachment", new object[] {
                        AttachId}, this.GetAttachmentOperationCompleted, userState);
        }
        
        private void OnGetAttachmentOperationCompleted(object arg) {
            if ((this.GetAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentCompleted(this, new GetAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetVersions", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetVersions() {
            object[] results = this.Invoke("GetVersions", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionsAsync() {
            this.GetVersionsAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionsAsync(object userState) {
            if ((this.GetVersionsOperationCompleted == null)) {
                this.GetVersionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionsOperationCompleted);
            }
            this.InvokeAsync("GetVersions", new object[0], this.GetVersionsOperationCompleted, userState);
        }
        
        private void OnGetVersionsOperationCompleted(object arg) {
            if ((this.GetVersionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionsCompleted(this, new GetVersionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/InsertSiteCategory", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertSiteCategory(SiteCategoryEntity entity) {
            object[] results = this.Invoke("InsertSiteCategory", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSiteCategoryAsync(SiteCategoryEntity entity) {
            this.InsertSiteCategoryAsync(entity, null);
        }
        
        /// <remarks/>
        public void InsertSiteCategoryAsync(SiteCategoryEntity entity, object userState) {
            if ((this.InsertSiteCategoryOperationCompleted == null)) {
                this.InsertSiteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSiteCategoryOperationCompleted);
            }
            this.InvokeAsync("InsertSiteCategory", new object[] {
                        entity}, this.InsertSiteCategoryOperationCompleted, userState);
        }
        
        private void OnInsertSiteCategoryOperationCompleted(object arg) {
            if ((this.InsertSiteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSiteCategoryCompleted(this, new InsertSiteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/ModifySiteCategory", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifySiteCategory(SiteCategoryEntity entity) {
            object[] results = this.Invoke("ModifySiteCategory", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifySiteCategoryAsync(SiteCategoryEntity entity) {
            this.ModifySiteCategoryAsync(entity, null);
        }
        
        /// <remarks/>
        public void ModifySiteCategoryAsync(SiteCategoryEntity entity, object userState) {
            if ((this.ModifySiteCategoryOperationCompleted == null)) {
                this.ModifySiteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifySiteCategoryOperationCompleted);
            }
            this.InvokeAsync("ModifySiteCategory", new object[] {
                        entity}, this.ModifySiteCategoryOperationCompleted, userState);
        }
        
        private void OnModifySiteCategoryOperationCompleted(object arg) {
            if ((this.ModifySiteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifySiteCategoryCompleted(this, new ModifySiteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/DeleteSiteCategory", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSiteCategory(int Id) {
            object[] results = this.Invoke("DeleteSiteCategory", new object[] {
                        Id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSiteCategoryAsync(int Id) {
            this.DeleteSiteCategoryAsync(Id, null);
        }
        
        /// <remarks/>
        public void DeleteSiteCategoryAsync(int Id, object userState) {
            if ((this.DeleteSiteCategoryOperationCompleted == null)) {
                this.DeleteSiteCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSiteCategoryOperationCompleted);
            }
            this.InvokeAsync("DeleteSiteCategory", new object[] {
                        Id}, this.DeleteSiteCategoryOperationCompleted, userState);
        }
        
        private void OnDeleteSiteCategoryOperationCompleted(object arg) {
            if ((this.DeleteSiteCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSiteCategoryCompleted(this, new DeleteSiteCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetSiteCategorys", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiteCategoryEntity[] GetSiteCategorys() {
            object[] results = this.Invoke("GetSiteCategorys", new object[0]);
            return ((SiteCategoryEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteCategorysAsync() {
            this.GetSiteCategorysAsync(null);
        }
        
        /// <remarks/>
        public void GetSiteCategorysAsync(object userState) {
            if ((this.GetSiteCategorysOperationCompleted == null)) {
                this.GetSiteCategorysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteCategorysOperationCompleted);
            }
            this.InvokeAsync("GetSiteCategorys", new object[0], this.GetSiteCategorysOperationCompleted, userState);
        }
        
        private void OnGetSiteCategorysOperationCompleted(object arg) {
            if ((this.GetSiteCategorysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteCategorysCompleted(this, new GetSiteCategorysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/InsertSiteTable", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertSiteTable(SiteTableEntity entity) {
            object[] results = this.Invoke("InsertSiteTable", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSiteTableAsync(SiteTableEntity entity) {
            this.InsertSiteTableAsync(entity, null);
        }
        
        /// <remarks/>
        public void InsertSiteTableAsync(SiteTableEntity entity, object userState) {
            if ((this.InsertSiteTableOperationCompleted == null)) {
                this.InsertSiteTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSiteTableOperationCompleted);
            }
            this.InvokeAsync("InsertSiteTable", new object[] {
                        entity}, this.InsertSiteTableOperationCompleted, userState);
        }
        
        private void OnInsertSiteTableOperationCompleted(object arg) {
            if ((this.InsertSiteTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSiteTableCompleted(this, new InsertSiteTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/ModifySiteTable", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifySiteTable(SiteTableEntity entity) {
            object[] results = this.Invoke("ModifySiteTable", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifySiteTableAsync(SiteTableEntity entity) {
            this.ModifySiteTableAsync(entity, null);
        }
        
        /// <remarks/>
        public void ModifySiteTableAsync(SiteTableEntity entity, object userState) {
            if ((this.ModifySiteTableOperationCompleted == null)) {
                this.ModifySiteTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifySiteTableOperationCompleted);
            }
            this.InvokeAsync("ModifySiteTable", new object[] {
                        entity}, this.ModifySiteTableOperationCompleted, userState);
        }
        
        private void OnModifySiteTableOperationCompleted(object arg) {
            if ((this.ModifySiteTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifySiteTableCompleted(this, new ModifySiteTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/DeleteSiteTable", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSiteTable(int Id) {
            object[] results = this.Invoke("DeleteSiteTable", new object[] {
                        Id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSiteTableAsync(int Id) {
            this.DeleteSiteTableAsync(Id, null);
        }
        
        /// <remarks/>
        public void DeleteSiteTableAsync(int Id, object userState) {
            if ((this.DeleteSiteTableOperationCompleted == null)) {
                this.DeleteSiteTableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSiteTableOperationCompleted);
            }
            this.InvokeAsync("DeleteSiteTable", new object[] {
                        Id}, this.DeleteSiteTableOperationCompleted, userState);
        }
        
        private void OnDeleteSiteTableOperationCompleted(object arg) {
            if ((this.DeleteSiteTableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSiteTableCompleted(this, new DeleteSiteTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetSiteTables", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiteTableEntity[] GetSiteTables() {
            object[] results = this.Invoke("GetSiteTables", new object[0]);
            return ((SiteTableEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteTablesAsync() {
            this.GetSiteTablesAsync(null);
        }
        
        /// <remarks/>
        public void GetSiteTablesAsync(object userState) {
            if ((this.GetSiteTablesOperationCompleted == null)) {
                this.GetSiteTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteTablesOperationCompleted);
            }
            this.InvokeAsync("GetSiteTables", new object[0], this.GetSiteTablesOperationCompleted, userState);
        }
        
        private void OnGetSiteTablesOperationCompleted(object arg) {
            if ((this.GetSiteTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteTablesCompleted(this, new GetSiteTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetSiteTableByCategory", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SiteTableEntity[] GetSiteTableByCategory(int categoryId) {
            object[] results = this.Invoke("GetSiteTableByCategory", new object[] {
                        categoryId});
            return ((SiteTableEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteTableByCategoryAsync(int categoryId) {
            this.GetSiteTableByCategoryAsync(categoryId, null);
        }
        
        /// <remarks/>
        public void GetSiteTableByCategoryAsync(int categoryId, object userState) {
            if ((this.GetSiteTableByCategoryOperationCompleted == null)) {
                this.GetSiteTableByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteTableByCategoryOperationCompleted);
            }
            this.InvokeAsync("GetSiteTableByCategory", new object[] {
                        categoryId}, this.GetSiteTableByCategoryOperationCompleted, userState);
        }
        
        private void OnGetSiteTableByCategoryOperationCompleted(object arg) {
            if ((this.GetSiteTableByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteTableByCategoryCompleted(this, new GetSiteTableByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetFileByPath", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetFileByPath(string filePath) {
            object[] results = this.Invoke("GetFileByPath", new object[] {
                        filePath});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileByPathAsync(string filePath) {
            this.GetFileByPathAsync(filePath, null);
        }
        
        /// <remarks/>
        public void GetFileByPathAsync(string filePath, object userState) {
            if ((this.GetFileByPathOperationCompleted == null)) {
                this.GetFileByPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileByPathOperationCompleted);
            }
            this.InvokeAsync("GetFileByPath", new object[] {
                        filePath}, this.GetFileByPathOperationCompleted, userState);
        }
        
        private void OnGetFileByPathOperationCompleted(object arg) {
            if ((this.GetFileByPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileByPathCompleted(this, new GetFileByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetNoticeRemindsWithNum", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNoticeRemindsWithNum(string gsdm, string num) {
            object[] results = this.Invoke("GetNoticeRemindsWithNum", new object[] {
                        gsdm,
                        num});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoticeRemindsWithNumAsync(string gsdm, string num) {
            this.GetNoticeRemindsWithNumAsync(gsdm, num, null);
        }
        
        /// <remarks/>
        public void GetNoticeRemindsWithNumAsync(string gsdm, string num, object userState) {
            if ((this.GetNoticeRemindsWithNumOperationCompleted == null)) {
                this.GetNoticeRemindsWithNumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoticeRemindsWithNumOperationCompleted);
            }
            this.InvokeAsync("GetNoticeRemindsWithNum", new object[] {
                        gsdm,
                        num}, this.GetNoticeRemindsWithNumOperationCompleted, userState);
        }
        
        private void OnGetNoticeRemindsWithNumOperationCompleted(object arg) {
            if ((this.GetNoticeRemindsWithNumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoticeRemindsWithNumCompleted(this, new GetNoticeRemindsWithNumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetOpenid", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOpenid(string code) {
            object[] results = this.Invoke("GetOpenid", new object[] {
                        code});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpenidAsync(string code) {
            this.GetOpenidAsync(code, null);
        }
        
        /// <remarks/>
        public void GetOpenidAsync(string code, object userState) {
            if ((this.GetOpenidOperationCompleted == null)) {
                this.GetOpenidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpenidOperationCompleted);
            }
            this.InvokeAsync("GetOpenid", new object[] {
                        code}, this.GetOpenidOperationCompleted, userState);
        }
        
        private void OnGetOpenidOperationCompleted(object arg) {
            if ((this.GetOpenidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpenidCompleted(this, new GetOpenidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetCustomerEntityList", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustomerEntity[] GetCustomerEntityList(string Symbol) {
            object[] results = this.Invoke("GetCustomerEntityList", new object[] {
                        Symbol});
            return ((CustomerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerEntityListAsync(string Symbol) {
            this.GetCustomerEntityListAsync(Symbol, null);
        }
        
        /// <remarks/>
        public void GetCustomerEntityListAsync(string Symbol, object userState) {
            if ((this.GetCustomerEntityListOperationCompleted == null)) {
                this.GetCustomerEntityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerEntityListOperationCompleted);
            }
            this.InvokeAsync("GetCustomerEntityList", new object[] {
                        Symbol}, this.GetCustomerEntityListOperationCompleted, userState);
        }
        
        private void OnGetCustomerEntityListOperationCompleted(object arg) {
            if ((this.GetCustomerEntityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerEntityListCompleted(this, new GetCustomerEntityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAllSoftUpdateInfo", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SoftUpdateInfoEntity[] GetAllSoftUpdateInfo() {
            object[] results = this.Invoke("GetAllSoftUpdateInfo", new object[0]);
            return ((SoftUpdateInfoEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSoftUpdateInfoAsync() {
            this.GetAllSoftUpdateInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSoftUpdateInfoAsync(object userState) {
            if ((this.GetAllSoftUpdateInfoOperationCompleted == null)) {
                this.GetAllSoftUpdateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSoftUpdateInfoOperationCompleted);
            }
            this.InvokeAsync("GetAllSoftUpdateInfo", new object[0], this.GetAllSoftUpdateInfoOperationCompleted, userState);
        }
        
        private void OnGetAllSoftUpdateInfoOperationCompleted(object arg) {
            if ((this.GetAllSoftUpdateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSoftUpdateInfoCompleted(this, new GetAllSoftUpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/ModifySoftUpdateInfo", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifySoftUpdateInfo(SoftUpdateInfoEntity entity) {
            object[] results = this.Invoke("ModifySoftUpdateInfo", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifySoftUpdateInfoAsync(SoftUpdateInfoEntity entity) {
            this.ModifySoftUpdateInfoAsync(entity, null);
        }
        
        /// <remarks/>
        public void ModifySoftUpdateInfoAsync(SoftUpdateInfoEntity entity, object userState) {
            if ((this.ModifySoftUpdateInfoOperationCompleted == null)) {
                this.ModifySoftUpdateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifySoftUpdateInfoOperationCompleted);
            }
            this.InvokeAsync("ModifySoftUpdateInfo", new object[] {
                        entity}, this.ModifySoftUpdateInfoOperationCompleted, userState);
        }
        
        private void OnModifySoftUpdateInfoOperationCompleted(object arg) {
            if ((this.ModifySoftUpdateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifySoftUpdateInfoCompleted(this, new ModifySoftUpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/AddSoftUpdateInfo", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddSoftUpdateInfo(SoftUpdateInfoEntity entity) {
            object[] results = this.Invoke("AddSoftUpdateInfo", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddSoftUpdateInfoAsync(SoftUpdateInfoEntity entity) {
            this.AddSoftUpdateInfoAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddSoftUpdateInfoAsync(SoftUpdateInfoEntity entity, object userState) {
            if ((this.AddSoftUpdateInfoOperationCompleted == null)) {
                this.AddSoftUpdateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSoftUpdateInfoOperationCompleted);
            }
            this.InvokeAsync("AddSoftUpdateInfo", new object[] {
                        entity}, this.AddSoftUpdateInfoOperationCompleted, userState);
        }
        
        private void OnAddSoftUpdateInfoOperationCompleted(object arg) {
            if ((this.AddSoftUpdateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSoftUpdateInfoCompleted(this, new AddSoftUpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/DeleteSoftUpdateInfo", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteSoftUpdateInfo(int id) {
            object[] results = this.Invoke("DeleteSoftUpdateInfo", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSoftUpdateInfoAsync(int id) {
            this.DeleteSoftUpdateInfoAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteSoftUpdateInfoAsync(int id, object userState) {
            if ((this.DeleteSoftUpdateInfoOperationCompleted == null)) {
                this.DeleteSoftUpdateInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSoftUpdateInfoOperationCompleted);
            }
            this.InvokeAsync("DeleteSoftUpdateInfo", new object[] {
                        id}, this.DeleteSoftUpdateInfoOperationCompleted, userState);
        }
        
        private void OnDeleteSoftUpdateInfoOperationCompleted(object arg) {
            if ((this.DeleteSoftUpdateInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSoftUpdateInfoCompleted(this, new DeleteSoftUpdateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAllInternetLink", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InternetLinkEntity[] GetAllInternetLink() {
            object[] results = this.Invoke("GetAllInternetLink", new object[0]);
            return ((InternetLinkEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllInternetLinkAsync() {
            this.GetAllInternetLinkAsync(null);
        }
        
        /// <remarks/>
        public void GetAllInternetLinkAsync(object userState) {
            if ((this.GetAllInternetLinkOperationCompleted == null)) {
                this.GetAllInternetLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllInternetLinkOperationCompleted);
            }
            this.InvokeAsync("GetAllInternetLink", new object[0], this.GetAllInternetLinkOperationCompleted, userState);
        }
        
        private void OnGetAllInternetLinkOperationCompleted(object arg) {
            if ((this.GetAllInternetLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllInternetLinkCompleted(this, new GetAllInternetLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/ModifyInternetLink", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ModifyInternetLink(InternetLinkEntity entity) {
            object[] results = this.Invoke("ModifyInternetLink", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyInternetLinkAsync(InternetLinkEntity entity) {
            this.ModifyInternetLinkAsync(entity, null);
        }
        
        /// <remarks/>
        public void ModifyInternetLinkAsync(InternetLinkEntity entity, object userState) {
            if ((this.ModifyInternetLinkOperationCompleted == null)) {
                this.ModifyInternetLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyInternetLinkOperationCompleted);
            }
            this.InvokeAsync("ModifyInternetLink", new object[] {
                        entity}, this.ModifyInternetLinkOperationCompleted, userState);
        }
        
        private void OnModifyInternetLinkOperationCompleted(object arg) {
            if ((this.ModifyInternetLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyInternetLinkCompleted(this, new ModifyInternetLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/AddInternetLink", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddInternetLink(InternetLinkEntity entity) {
            object[] results = this.Invoke("AddInternetLink", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddInternetLinkAsync(InternetLinkEntity entity) {
            this.AddInternetLinkAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddInternetLinkAsync(InternetLinkEntity entity, object userState) {
            if ((this.AddInternetLinkOperationCompleted == null)) {
                this.AddInternetLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInternetLinkOperationCompleted);
            }
            this.InvokeAsync("AddInternetLink", new object[] {
                        entity}, this.AddInternetLinkOperationCompleted, userState);
        }
        
        private void OnAddInternetLinkOperationCompleted(object arg) {
            if ((this.AddInternetLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInternetLinkCompleted(this, new AddInternetLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/DeleteInternetLink", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteInternetLink(int id) {
            object[] results = this.Invoke("DeleteInternetLink", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInternetLinkAsync(int id) {
            this.DeleteInternetLinkAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteInternetLinkAsync(int id, object userState) {
            if ((this.DeleteInternetLinkOperationCompleted == null)) {
                this.DeleteInternetLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInternetLinkOperationCompleted);
            }
            this.InvokeAsync("DeleteInternetLink", new object[] {
                        id}, this.DeleteInternetLinkOperationCompleted, userState);
        }
        
        private void OnDeleteInternetLinkOperationCompleted(object arg) {
            if ((this.DeleteInternetLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInternetLinkCompleted(this, new DeleteInternetLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UserClaimExist", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserClaimExist(string EventId) {
            object[] results = this.Invoke("UserClaimExist", new object[] {
                        EventId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserClaimExistAsync(string EventId) {
            this.UserClaimExistAsync(EventId, null);
        }
        
        /// <remarks/>
        public void UserClaimExistAsync(string EventId, object userState) {
            if ((this.UserClaimExistOperationCompleted == null)) {
                this.UserClaimExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserClaimExistOperationCompleted);
            }
            this.InvokeAsync("UserClaimExist", new object[] {
                        EventId}, this.UserClaimExistOperationCompleted, userState);
        }
        
        private void OnUserClaimExistOperationCompleted(object arg) {
            if ((this.UserClaimExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserClaimExistCompleted(this, new UserClaimExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAllTrialApplication", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TrialApplicationEntity[] GetAllTrialApplication() {
            object[] results = this.Invoke("GetAllTrialApplication", new object[0]);
            return ((TrialApplicationEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTrialApplicationAsync() {
            this.GetAllTrialApplicationAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTrialApplicationAsync(object userState) {
            if ((this.GetAllTrialApplicationOperationCompleted == null)) {
                this.GetAllTrialApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTrialApplicationOperationCompleted);
            }
            this.InvokeAsync("GetAllTrialApplication", new object[0], this.GetAllTrialApplicationOperationCompleted, userState);
        }
        
        private void OnGetAllTrialApplicationOperationCompleted(object arg) {
            if ((this.GetAllTrialApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTrialApplicationCompleted(this, new GetAllTrialApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UpdateTrialApplication", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateTrialApplication(TrialApplicationEntity entity) {
            object[] results = this.Invoke("UpdateTrialApplication", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTrialApplicationAsync(TrialApplicationEntity entity) {
            this.UpdateTrialApplicationAsync(entity, null);
        }
        
        /// <remarks/>
        public void UpdateTrialApplicationAsync(TrialApplicationEntity entity, object userState) {
            if ((this.UpdateTrialApplicationOperationCompleted == null)) {
                this.UpdateTrialApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTrialApplicationOperationCompleted);
            }
            this.InvokeAsync("UpdateTrialApplication", new object[] {
                        entity}, this.UpdateTrialApplicationOperationCompleted, userState);
        }
        
        private void OnUpdateTrialApplicationOperationCompleted(object arg) {
            if ((this.UpdateTrialApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTrialApplicationCompleted(this, new UpdateTrialApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/AddTrialApplication", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddTrialApplication(TrialApplicationEntity entity) {
            object[] results = this.Invoke("AddTrialApplication", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddTrialApplicationAsync(TrialApplicationEntity entity) {
            this.AddTrialApplicationAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddTrialApplicationAsync(TrialApplicationEntity entity, object userState) {
            if ((this.AddTrialApplicationOperationCompleted == null)) {
                this.AddTrialApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddTrialApplicationOperationCompleted);
            }
            this.InvokeAsync("AddTrialApplication", new object[] {
                        entity}, this.AddTrialApplicationOperationCompleted, userState);
        }
        
        private void OnAddTrialApplicationOperationCompleted(object arg) {
            if ((this.AddTrialApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddTrialApplicationCompleted(this, new AddTrialApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/DeleteTrialApplication", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTrialApplication(int id) {
            object[] results = this.Invoke("DeleteTrialApplication", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTrialApplicationAsync(int id) {
            this.DeleteTrialApplicationAsync(id, null);
        }
        
        /// <remarks/>
        public void DeleteTrialApplicationAsync(int id, object userState) {
            if ((this.DeleteTrialApplicationOperationCompleted == null)) {
                this.DeleteTrialApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTrialApplicationOperationCompleted);
            }
            this.InvokeAsync("DeleteTrialApplication", new object[] {
                        id}, this.DeleteTrialApplicationOperationCompleted, userState);
        }
        
        private void OnDeleteTrialApplicationOperationCompleted(object arg) {
            if ((this.DeleteTrialApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTrialApplicationCompleted(this, new DeleteTrialApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/AddCustFeedback", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddCustFeedback(CustFeedbackEntity entity) {
            object[] results = this.Invoke("AddCustFeedback", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddCustFeedbackAsync(CustFeedbackEntity entity) {
            this.AddCustFeedbackAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddCustFeedbackAsync(CustFeedbackEntity entity, object userState) {
            if ((this.AddCustFeedbackOperationCompleted == null)) {
                this.AddCustFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustFeedbackOperationCompleted);
            }
            this.InvokeAsync("AddCustFeedback", new object[] {
                        entity}, this.AddCustFeedbackOperationCompleted, userState);
        }
        
        private void OnAddCustFeedbackOperationCompleted(object arg) {
            if ((this.AddCustFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustFeedbackCompleted(this, new AddCustFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/DelCustFeedback", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DelCustFeedback(int Id) {
            object[] results = this.Invoke("DelCustFeedback", new object[] {
                        Id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DelCustFeedbackAsync(int Id) {
            this.DelCustFeedbackAsync(Id, null);
        }
        
        /// <remarks/>
        public void DelCustFeedbackAsync(int Id, object userState) {
            if ((this.DelCustFeedbackOperationCompleted == null)) {
                this.DelCustFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelCustFeedbackOperationCompleted);
            }
            this.InvokeAsync("DelCustFeedback", new object[] {
                        Id}, this.DelCustFeedbackOperationCompleted, userState);
        }
        
        private void OnDelCustFeedbackOperationCompleted(object arg) {
            if ((this.DelCustFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelCustFeedbackCompleted(this, new DelCustFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAllCustFeedback", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CustFeedbackEntity[] GetAllCustFeedback() {
            object[] results = this.Invoke("GetAllCustFeedback", new object[0]);
            return ((CustFeedbackEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCustFeedbackAsync() {
            this.GetAllCustFeedbackAsync(null);
        }
        
        /// <remarks/>
        public void GetAllCustFeedbackAsync(object userState) {
            if ((this.GetAllCustFeedbackOperationCompleted == null)) {
                this.GetAllCustFeedbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCustFeedbackOperationCompleted);
            }
            this.InvokeAsync("GetAllCustFeedback", new object[0], this.GetAllCustFeedbackOperationCompleted, userState);
        }
        
        private void OnGetAllCustFeedbackOperationCompleted(object arg) {
            if ((this.GetAllCustFeedbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCustFeedbackCompleted(this, new GetAllCustFeedbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetAllMSAttention", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public MSAttentionEntity[] GetAllMSAttention() {
            object[] results = this.Invoke("GetAllMSAttention", new object[0]);
            return ((MSAttentionEntity[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMSAttentionAsync() {
            this.GetAllMSAttentionAsync(null);
        }
        
        /// <remarks/>
        public void GetAllMSAttentionAsync(object userState) {
            if ((this.GetAllMSAttentionOperationCompleted == null)) {
                this.GetAllMSAttentionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMSAttentionOperationCompleted);
            }
            this.InvokeAsync("GetAllMSAttention", new object[0], this.GetAllMSAttentionOperationCompleted, userState);
        }
        
        private void OnGetAllMSAttentionOperationCompleted(object arg) {
            if ((this.GetAllMSAttentionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMSAttentionCompleted(this, new GetAllMSAttentionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/UpdateMSAttention", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateMSAttention(MSAttentionEntity entity) {
            object[] results = this.Invoke("UpdateMSAttention", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMSAttentionAsync(MSAttentionEntity entity) {
            this.UpdateMSAttentionAsync(entity, null);
        }
        
        /// <remarks/>
        public void UpdateMSAttentionAsync(MSAttentionEntity entity, object userState) {
            if ((this.UpdateMSAttentionOperationCompleted == null)) {
                this.UpdateMSAttentionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMSAttentionOperationCompleted);
            }
            this.InvokeAsync("UpdateMSAttention", new object[] {
                        entity}, this.UpdateMSAttentionOperationCompleted, userState);
        }
        
        private void OnUpdateMSAttentionOperationCompleted(object arg) {
            if ((this.UpdateMSAttentionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMSAttentionCompleted(this, new UpdateMSAttentionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/AddMSAttention", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddMSAttention(MSAttentionEntity entity) {
            object[] results = this.Invoke("AddMSAttention", new object[] {
                        entity});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddMSAttentionAsync(MSAttentionEntity entity) {
            this.AddMSAttentionAsync(entity, null);
        }
        
        /// <remarks/>
        public void AddMSAttentionAsync(MSAttentionEntity entity, object userState) {
            if ((this.AddMSAttentionOperationCompleted == null)) {
                this.AddMSAttentionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMSAttentionOperationCompleted);
            }
            this.InvokeAsync("AddMSAttention", new object[] {
                        entity}, this.AddMSAttentionOperationCompleted, userState);
        }
        
        private void OnAddMSAttentionOperationCompleted(object arg) {
            if ((this.AddMSAttentionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMSAttentionCompleted(this, new AddMSAttentionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/DeleteMSAttention", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteMSAttention(string openid) {
            object[] results = this.Invoke("DeleteMSAttention", new object[] {
                        openid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMSAttentionAsync(string openid) {
            this.DeleteMSAttentionAsync(openid, null);
        }
        
        /// <remarks/>
        public void DeleteMSAttentionAsync(string openid, object userState) {
            if ((this.DeleteMSAttentionOperationCompleted == null)) {
                this.DeleteMSAttentionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMSAttentionOperationCompleted);
            }
            this.InvokeAsync("DeleteMSAttention", new object[] {
                        openid}, this.DeleteMSAttentionOperationCompleted, userState);
        }
        
        private void OnDeleteMSAttentionOperationCompleted(object arg) {
            if ((this.DeleteMSAttentionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMSAttentionCompleted(this, new DeleteMSAttentionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("genesysinfo.net/GetChatPath", RequestNamespace="genesysinfo.net", ResponseNamespace="genesysinfo.net", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetChatPath() {
            object[] results = this.Invoke("GetChatPath", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetChatPathAsync() {
            this.GetChatPathAsync(null);
        }
        
        /// <remarks/>
        public void GetChatPathAsync(object userState) {
            if ((this.GetChatPathOperationCompleted == null)) {
                this.GetChatPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChatPathOperationCompleted);
            }
            this.InvokeAsync("GetChatPath", new object[0], this.GetChatPathOperationCompleted, userState);
        }
        
        private void OnGetChatPathOperationCompleted(object arg) {
            if ((this.GetChatPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChatPathCompleted(this, new GetChatPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="genesysinfo.net", IsNullable=false)]
    public partial class MySoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string usernameField;
        
        private string passwordField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class MSAttentionEntity {
        
        private string openidField;
        
        private int subscribeField;
        
        private string nicknameField;
        
        private int sexField;
        
        private string languageField;
        
        private string cityField;
        
        private string provinceField;
        
        private string countryField;
        
        private string headimgurlField;
        
        private int subscribe_timeField;
        
        private string unionidField;
        
        private string remarkField;
        
        private int groupidField;
        
        private System.DateTime updatetimeField;
        
        /// <remarks/>
        public string Openid {
            get {
                return this.openidField;
            }
            set {
                this.openidField = value;
            }
        }
        
        /// <remarks/>
        public int Subscribe {
            get {
                return this.subscribeField;
            }
            set {
                this.subscribeField = value;
            }
        }
        
        /// <remarks/>
        public string Nickname {
            get {
                return this.nicknameField;
            }
            set {
                this.nicknameField = value;
            }
        }
        
        /// <remarks/>
        public int Sex {
            get {
                return this.sexField;
            }
            set {
                this.sexField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Province {
            get {
                return this.provinceField;
            }
            set {
                this.provinceField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Headimgurl {
            get {
                return this.headimgurlField;
            }
            set {
                this.headimgurlField = value;
            }
        }
        
        /// <remarks/>
        public int Subscribe_time {
            get {
                return this.subscribe_timeField;
            }
            set {
                this.subscribe_timeField = value;
            }
        }
        
        /// <remarks/>
        public string Unionid {
            get {
                return this.unionidField;
            }
            set {
                this.unionidField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int Groupid {
            get {
                return this.groupidField;
            }
            set {
                this.groupidField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updatetime {
            get {
                return this.updatetimeField;
            }
            set {
                this.updatetimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class CustFeedbackEntity {
        
        private int idField;
        
        private string customerIDField;
        
        private string feedbackTxtField;
        
        private System.DateTime feedbackTimeField;
        
        private string reMarkField;
        
        private string emailField;
        
        private string nickNameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        public string FeedbackTxt {
            get {
                return this.feedbackTxtField;
            }
            set {
                this.feedbackTxtField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FeedbackTime {
            get {
                return this.feedbackTimeField;
            }
            set {
                this.feedbackTimeField = value;
            }
        }
        
        /// <remarks/>
        public string ReMark {
            get {
                return this.reMarkField;
            }
            set {
                this.reMarkField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string NickName {
            get {
                return this.nickNameField;
            }
            set {
                this.nickNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class TrialApplicationEntity {
        
        private int idField;
        
        private string symbolField;
        
        private string customerBriefNameField;
        
        private string customerFullNameField;
        
        private string positionField;
        
        private string applicantNameField;
        
        private string phoneField;
        
        private string microSignalField;
        
        private System.Nullable<bool> isPassField;
        
        private System.DateTime applyTimeField;
        
        private System.Nullable<System.DateTime> passTimeField;
        
        private string emailField;
        
        private string softNameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerBriefName {
            get {
                return this.customerBriefNameField;
            }
            set {
                this.customerBriefNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerFullName {
            get {
                return this.customerFullNameField;
            }
            set {
                this.customerFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string Position {
            get {
                return this.positionField;
            }
            set {
                this.positionField = value;
            }
        }
        
        /// <remarks/>
        public string ApplicantName {
            get {
                return this.applicantNameField;
            }
            set {
                this.applicantNameField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string MicroSignal {
            get {
                return this.microSignalField;
            }
            set {
                this.microSignalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsPass {
            get {
                return this.isPassField;
            }
            set {
                this.isPassField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ApplyTime {
            get {
                return this.applyTimeField;
            }
            set {
                this.applyTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PassTime {
            get {
                return this.passTimeField;
            }
            set {
                this.passTimeField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string SoftName {
            get {
                return this.softNameField;
            }
            set {
                this.softNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class InternetLinkEntity {
        
        private int idField;
        
        private string nameField;
        
        private string uRLField;
        
        private string logoURLField;
        
        private int orderField;
        
        private System.DateTime addDateField;
        
        private bool isUserDefField;
        
        private string reMarkField;
        
        private string logoImgField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public string LogoURL {
            get {
                return this.logoURLField;
            }
            set {
                this.logoURLField = value;
            }
        }
        
        /// <remarks/>
        public int Order {
            get {
                return this.orderField;
            }
            set {
                this.orderField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AddDate {
            get {
                return this.addDateField;
            }
            set {
                this.addDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsUserDef {
            get {
                return this.isUserDefField;
            }
            set {
                this.isUserDefField = value;
            }
        }
        
        /// <remarks/>
        public string ReMark {
            get {
                return this.reMarkField;
            }
            set {
                this.reMarkField = value;
            }
        }
        
        /// <remarks/>
        public string LogoImg {
            get {
                return this.logoImgField;
            }
            set {
                this.logoImgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class SoftUpdateInfoEntity {
        
        private int idField;
        
        private string softNameField;
        
        private string downURLField;
        
        private string versionField;
        
        private string updateRemarkField;
        
        private System.DateTime updateTimeField;
        
        private decimal sizeField;
        
        private string displayIconField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string SoftName {
            get {
                return this.softNameField;
            }
            set {
                this.softNameField = value;
            }
        }
        
        /// <remarks/>
        public string DownURL {
            get {
                return this.downURLField;
            }
            set {
                this.downURLField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string UpdateRemark {
            get {
                return this.updateRemarkField;
            }
            set {
                this.updateRemarkField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UpdateTime {
            get {
                return this.updateTimeField;
            }
            set {
                this.updateTimeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayIcon {
            get {
                return this.displayIconField;
            }
            set {
                this.displayIconField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class CustomerEntity {
        
        private string symbolField;
        
        private string customerNameField;
        
        private string customerBriefNameField;
        
        private string boardField;
        
        /// <remarks/>
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public string CustomerBriefName {
            get {
                return this.customerBriefNameField;
            }
            set {
                this.customerBriefNameField = value;
            }
        }
        
        /// <remarks/>
        public string Board {
            get {
                return this.boardField;
            }
            set {
                this.boardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class SiteTableEntity {
        
        private int siteIdField;
        
        private int siteCategoryIdField;
        
        private string siteTitleField;
        
        private string siteLinkField;
        
        private string siteImagePathField;
        
        private SiteCategoryEntity siteCategoryField;
        
        /// <remarks/>
        public int SiteId {
            get {
                return this.siteIdField;
            }
            set {
                this.siteIdField = value;
            }
        }
        
        /// <remarks/>
        public int SiteCategoryId {
            get {
                return this.siteCategoryIdField;
            }
            set {
                this.siteCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteTitle {
            get {
                return this.siteTitleField;
            }
            set {
                this.siteTitleField = value;
            }
        }
        
        /// <remarks/>
        public string SiteLink {
            get {
                return this.siteLinkField;
            }
            set {
                this.siteLinkField = value;
            }
        }
        
        /// <remarks/>
        public string SiteImagePath {
            get {
                return this.siteImagePathField;
            }
            set {
                this.siteImagePathField = value;
            }
        }
        
        /// <remarks/>
        public SiteCategoryEntity siteCategory {
            get {
                return this.siteCategoryField;
            }
            set {
                this.siteCategoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class SiteCategoryEntity {
        
        private int siteCategoryIdField;
        
        private string siteCategoryNameField;
        
        /// <remarks/>
        public int SiteCategoryId {
            get {
                return this.siteCategoryIdField;
            }
            set {
                this.siteCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        public string SiteCategoryName {
            get {
                return this.siteCategoryNameField;
            }
            set {
                this.siteCategoryNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class MyQuesAndAnswerEntity {
        
        private int idField;
        
        private string quesTypeField;
        
        private string quesNameField;
        
        private string contactField;
        
        private string contactNameField;
        
        private string answersField;
        
        private string answersNameField;
        
        private string boardField;
        
        private string bgndField;
        
        private string bglbField;
        
        private string gsdmField;
        
        private string sourceModeField;
        
        private System.Nullable<System.DateTime> quesDateField;
        
        private System.Nullable<System.DateTime> ansDateField;
        
        private string reMarkField;
        
        private System.Nullable<System.DateTime> insertTimeField;
        
        private string cNumField;
        
        private string userIdField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string QuesType {
            get {
                return this.quesTypeField;
            }
            set {
                this.quesTypeField = value;
            }
        }
        
        /// <remarks/>
        public string QuesName {
            get {
                return this.quesNameField;
            }
            set {
                this.quesNameField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        public string Answers {
            get {
                return this.answersField;
            }
            set {
                this.answersField = value;
            }
        }
        
        /// <remarks/>
        public string AnswersName {
            get {
                return this.answersNameField;
            }
            set {
                this.answersNameField = value;
            }
        }
        
        /// <remarks/>
        public string Board {
            get {
                return this.boardField;
            }
            set {
                this.boardField = value;
            }
        }
        
        /// <remarks/>
        public string bgnd {
            get {
                return this.bgndField;
            }
            set {
                this.bgndField = value;
            }
        }
        
        /// <remarks/>
        public string bglb {
            get {
                return this.bglbField;
            }
            set {
                this.bglbField = value;
            }
        }
        
        /// <remarks/>
        public string Gsdm {
            get {
                return this.gsdmField;
            }
            set {
                this.gsdmField = value;
            }
        }
        
        /// <remarks/>
        public string SourceMode {
            get {
                return this.sourceModeField;
            }
            set {
                this.sourceModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> QuesDate {
            get {
                return this.quesDateField;
            }
            set {
                this.quesDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AnsDate {
            get {
                return this.ansDateField;
            }
            set {
                this.ansDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReMark {
            get {
                return this.reMarkField;
            }
            set {
                this.reMarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsertTime {
            get {
                return this.insertTimeField;
            }
            set {
                this.insertTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CNum {
            get {
                return this.cNumField;
            }
            set {
                this.cNumField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class MessageEntityFilter {
        
        private string messageIdField;
        
        private string eventIdField;
        
        private int isDeleteField;
        
        private string userIdPostField;
        
        private string userIdAcceptField;
        
        private System.Nullable<bool> isReadedField;
        
        /// <remarks/>
        public string MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public string EventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public int IsDelete {
            get {
                return this.isDeleteField;
            }
            set {
                this.isDeleteField = value;
            }
        }
        
        /// <remarks/>
        public string UserIdPost {
            get {
                return this.userIdPostField;
            }
            set {
                this.userIdPostField = value;
            }
        }
        
        /// <remarks/>
        public string UserIdAccept {
            get {
                return this.userIdAcceptField;
            }
            set {
                this.userIdAcceptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsReaded {
            get {
                return this.isReadedField;
            }
            set {
                this.isReadedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class AttachmentEntity {
        
        private string attachmentIdField;
        
        private string attachNameField;
        
        private string messageIdField;
        
        private string uploadPathField;
        
        private string userIdField;
        
        private int fileSizeField;
        
        private System.DateTime insertTimeField;
        
        private System.Nullable<bool> isDeleteField;
        
        private byte[] dataField;
        
        private string localPathField;
        
        /// <remarks/>
        public string AttachmentId {
            get {
                return this.attachmentIdField;
            }
            set {
                this.attachmentIdField = value;
            }
        }
        
        /// <remarks/>
        public string AttachName {
            get {
                return this.attachNameField;
            }
            set {
                this.attachNameField = value;
            }
        }
        
        /// <remarks/>
        public string MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public string UploadPath {
            get {
                return this.uploadPathField;
            }
            set {
                this.uploadPathField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public int FileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsertTime {
            get {
                return this.insertTimeField;
            }
            set {
                this.insertTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsDelete {
            get {
                return this.isDeleteField;
            }
            set {
                this.isDeleteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        public string LocalPath {
            get {
                return this.localPathField;
            }
            set {
                this.localPathField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class MessageEntity {
        
        private string messageIdField;
        
        private string eventIdField;
        
        private string messageInfoField;
        
        private string userIdPostField;
        
        private string userIdAcceptField;
        
        private string questionMarkField;
        
        private string answerMarkField;
        
        private int isDeleteField;
        
        private string attachmentIdField;
        
        private System.DateTime insertTimeField;
        
        private bool isClaimField;
        
        private string claimPeopleField;
        
        private bool isReadedField;
        
        /// <remarks/>
        public string MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        public string EventId {
            get {
                return this.eventIdField;
            }
            set {
                this.eventIdField = value;
            }
        }
        
        /// <remarks/>
        public string MessageInfo {
            get {
                return this.messageInfoField;
            }
            set {
                this.messageInfoField = value;
            }
        }
        
        /// <remarks/>
        public string UserIdPost {
            get {
                return this.userIdPostField;
            }
            set {
                this.userIdPostField = value;
            }
        }
        
        /// <remarks/>
        public string UserIdAccept {
            get {
                return this.userIdAcceptField;
            }
            set {
                this.userIdAcceptField = value;
            }
        }
        
        /// <remarks/>
        public string QuestionMark {
            get {
                return this.questionMarkField;
            }
            set {
                this.questionMarkField = value;
            }
        }
        
        /// <remarks/>
        public string AnswerMark {
            get {
                return this.answerMarkField;
            }
            set {
                this.answerMarkField = value;
            }
        }
        
        /// <remarks/>
        public int IsDelete {
            get {
                return this.isDeleteField;
            }
            set {
                this.isDeleteField = value;
            }
        }
        
        /// <remarks/>
        public string AttachmentId {
            get {
                return this.attachmentIdField;
            }
            set {
                this.attachmentIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsertTime {
            get {
                return this.insertTimeField;
            }
            set {
                this.insertTimeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClaim {
            get {
                return this.isClaimField;
            }
            set {
                this.isClaimField = value;
            }
        }
        
        /// <remarks/>
        public string ClaimPeople {
            get {
                return this.claimPeopleField;
            }
            set {
                this.claimPeopleField = value;
            }
        }
        
        /// <remarks/>
        public bool IsReaded {
            get {
                return this.isReadedField;
            }
            set {
                this.isReadedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class UKeyEntity {
        
        private string userIDField;
        
        private string bindingField;
        
        private int connectField;
        
        private string typeField;
        
        private System.DateTime createTimeField;
        
        /// <remarks/>
        public string UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public string Binding {
            get {
                return this.bindingField;
            }
            set {
                this.bindingField = value;
            }
        }
        
        /// <remarks/>
        public int Connect {
            get {
                return this.connectField;
            }
            set {
                this.connectField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreateTime {
            get {
                return this.createTimeField;
            }
            set {
                this.createTimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class UserEntity {
        
        private string idField;
        
        private string nickNameField;
        
        private string pwdField;
        
        private string imageField;
        
        private string gSDMField;
        
        private string gSMCField;
        
        private string postField;
        
        private string phoneField;
        
        private string qqField;
        
        private string emailField;
        
        private System.DateTime insertTimeField;
        
        private string realNameField;
        
        private string userIdField;
        
        private string signatureField;
        
        private string roleIdField;
        
        private System.Nullable<bool> isQQVerifiyField;
        
        private System.Nullable<bool> isEmailVerifiyField;
        
        private System.Nullable<bool> isPhoneVerifiyField;
        
        private string telephoneField;
        
        private string gSJCField;
        
        private string weiBoField;
        
        private int statusField;
        
        private int tryOutDaysField;
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string NickName {
            get {
                return this.nickNameField;
            }
            set {
                this.nickNameField = value;
            }
        }
        
        /// <remarks/>
        public string Pwd {
            get {
                return this.pwdField;
            }
            set {
                this.pwdField = value;
            }
        }
        
        /// <remarks/>
        public string Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public string GSDM {
            get {
                return this.gSDMField;
            }
            set {
                this.gSDMField = value;
            }
        }
        
        /// <remarks/>
        public string GSMC {
            get {
                return this.gSMCField;
            }
            set {
                this.gSMCField = value;
            }
        }
        
        /// <remarks/>
        public string Post {
            get {
                return this.postField;
            }
            set {
                this.postField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string QQ {
            get {
                return this.qqField;
            }
            set {
                this.qqField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime InsertTime {
            get {
                return this.insertTimeField;
            }
            set {
                this.insertTimeField = value;
            }
        }
        
        /// <remarks/>
        public string RealName {
            get {
                return this.realNameField;
            }
            set {
                this.realNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string Signature {
            get {
                return this.signatureField;
            }
            set {
                this.signatureField = value;
            }
        }
        
        /// <remarks/>
        public string RoleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsQQVerifiy {
            get {
                return this.isQQVerifiyField;
            }
            set {
                this.isQQVerifiyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsEmailVerifiy {
            get {
                return this.isEmailVerifiyField;
            }
            set {
                this.isEmailVerifiyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsPhoneVerifiy {
            get {
                return this.isPhoneVerifiyField;
            }
            set {
                this.isPhoneVerifiyField = value;
            }
        }
        
        /// <remarks/>
        public string Telephone {
            get {
                return this.telephoneField;
            }
            set {
                this.telephoneField = value;
            }
        }
        
        /// <remarks/>
        public string GSJC {
            get {
                return this.gSJCField;
            }
            set {
                this.gSJCField = value;
            }
        }
        
        /// <remarks/>
        public string WeiBo {
            get {
                return this.weiBoField;
            }
            set {
                this.weiBoField = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int TryOutDays {
            get {
                return this.tryOutDaysField;
            }
            set {
                this.tryOutDaysField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class QuesAndAnswerFilter {
        
        private int[] quesCategoryIDsField;
        
        private int quesTagEntityIDField;
        
        private string keytxtField;
        
        private string boardField;
        
        /// <remarks/>
        public int[] QuesCategoryIDs {
            get {
                return this.quesCategoryIDsField;
            }
            set {
                this.quesCategoryIDsField = value;
            }
        }
        
        /// <remarks/>
        public int QuesTagEntityID {
            get {
                return this.quesTagEntityIDField;
            }
            set {
                this.quesTagEntityIDField = value;
            }
        }
        
        /// <remarks/>
        public string Keytxt {
            get {
                return this.keytxtField;
            }
            set {
                this.keytxtField = value;
            }
        }
        
        /// <remarks/>
        public string Board {
            get {
                return this.boardField;
            }
            set {
                this.boardField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class QuesAndAnswerEntity {
        
        private int idField;
        
        private string quesTypeField;
        
        private string quesNameField;
        
        private string contactField;
        
        private string contactNameField;
        
        private string answersField;
        
        private string answersNameField;
        
        private string boardField;
        
        private string bgndField;
        
        private string bglbField;
        
        private string gsdmField;
        
        private string sourceModeField;
        
        private System.Nullable<System.DateTime> quesDateField;
        
        private System.Nullable<System.DateTime> ansDateField;
        
        private string reMarkField;
        
        private System.Nullable<System.DateTime> insertTimeField;
        
        private string cNumField;
        
        private string quesAttIdField;
        
        private string answerAttIdField;
        
        private int quesCategoryIDField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string QuesType {
            get {
                return this.quesTypeField;
            }
            set {
                this.quesTypeField = value;
            }
        }
        
        /// <remarks/>
        public string QuesName {
            get {
                return this.quesNameField;
            }
            set {
                this.quesNameField = value;
            }
        }
        
        /// <remarks/>
        public string Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        public string Answers {
            get {
                return this.answersField;
            }
            set {
                this.answersField = value;
            }
        }
        
        /// <remarks/>
        public string AnswersName {
            get {
                return this.answersNameField;
            }
            set {
                this.answersNameField = value;
            }
        }
        
        /// <remarks/>
        public string Board {
            get {
                return this.boardField;
            }
            set {
                this.boardField = value;
            }
        }
        
        /// <remarks/>
        public string bgnd {
            get {
                return this.bgndField;
            }
            set {
                this.bgndField = value;
            }
        }
        
        /// <remarks/>
        public string bglb {
            get {
                return this.bglbField;
            }
            set {
                this.bglbField = value;
            }
        }
        
        /// <remarks/>
        public string Gsdm {
            get {
                return this.gsdmField;
            }
            set {
                this.gsdmField = value;
            }
        }
        
        /// <remarks/>
        public string SourceMode {
            get {
                return this.sourceModeField;
            }
            set {
                this.sourceModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> QuesDate {
            get {
                return this.quesDateField;
            }
            set {
                this.quesDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AnsDate {
            get {
                return this.ansDateField;
            }
            set {
                this.ansDateField = value;
            }
        }
        
        /// <remarks/>
        public string ReMark {
            get {
                return this.reMarkField;
            }
            set {
                this.reMarkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> InsertTime {
            get {
                return this.insertTimeField;
            }
            set {
                this.insertTimeField = value;
            }
        }
        
        /// <remarks/>
        public string CNum {
            get {
                return this.cNumField;
            }
            set {
                this.cNumField = value;
            }
        }
        
        /// <remarks/>
        public string QuesAttId {
            get {
                return this.quesAttIdField;
            }
            set {
                this.quesAttIdField = value;
            }
        }
        
        /// <remarks/>
        public string AnswerAttId {
            get {
                return this.answerAttIdField;
            }
            set {
                this.answerAttIdField = value;
            }
        }
        
        /// <remarks/>
        public int QuesCategoryID {
            get {
                return this.quesCategoryIDField;
            }
            set {
                this.quesCategoryIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="genesysinfo.net")]
    public partial class QuesType {
        
        private string quesTypeNameField;
        
        private System.Nullable<int> quesTypeCountField;
        
        /// <remarks/>
        public string QuesTypeName {
            get {
                return this.quesTypeNameField;
            }
            set {
                this.quesTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> QuesTypeCount {
            get {
                return this.quesTypeCountField;
            }
            set {
                this.quesTypeCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllTypesAndCountCompletedEventHandler(object sender, GetAllTypesAndCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTypesAndCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTypesAndCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllTypesAndCountToMyQuesCompletedEventHandler(object sender, GetAllTypesAndCountToMyQuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTypesAndCountToMyQuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTypesAndCountToMyQuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuesAndAnswerByFilterCompletedEventHandler(object sender, GetQuesAndAnswerByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuesAndAnswerByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuesAndAnswerByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesAndAnswerEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesAndAnswerEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuesAndAnswerByPageCompletedEventHandler(object sender, GetQuesAndAnswerByPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuesAndAnswerByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuesAndAnswerByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesAndAnswerEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesAndAnswerEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuesAndAnswerByFilterNewCompletedEventHandler(object sender, GetQuesAndAnswerByFilterNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuesAndAnswerByFilterNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuesAndAnswerByFilterNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesAndAnswerEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesAndAnswerEntity[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int intTotalRecord {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuesAndAnsweTotalCompletedEventHandler(object sender, GetQuesAndAnsweTotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuesAndAnsweTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuesAndAnsweTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuesAndAnsweBase64TotalCompletedEventHandler(object sender, GetQuesAndAnsweBase64TotalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuesAndAnsweBase64TotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuesAndAnsweBase64TotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuesAndAnswerByQueryWordCompletedEventHandler(object sender, GetQuesAndAnswerByQueryWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuesAndAnswerByQueryWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuesAndAnswerByQueryWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesAndAnswerEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesAndAnswerEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuesAndAnswerByMyQuesPageCompletedEventHandler(object sender, GetQuesAndAnswerByMyQuesPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuesAndAnswerByMyQuesPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuesAndAnswerByMyQuesPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesAndAnswerEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesAndAnswerEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuesAndAnswerByFilter1CompletedEventHandler(object sender, GetQuesAndAnswerByFilter1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuesAndAnswerByFilter1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuesAndAnswerByFilter1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesAndAnswerEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesAndAnswerEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllTypesCompletedEventHandler(object sender, GetAllTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCategorysCompletedEventHandler(object sender, GetCategorysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategorysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategorysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetQuestionByUnAnswerCompletedEventHandler(object sender, GetQuestionByUnAnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuestionByUnAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuestionByUnAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QuesAndAnswerEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QuesAndAnswerEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UsingMD5CompletedEventHandler(object sender, UsingMD5CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UsingMD5CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UsingMD5CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void HelloCompletedEventHandler(object sender, HelloCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsBindingCompletedEventHandler(object sender, IsBindingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsBindingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsBindingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void MicroSignalBindingCompletedEventHandler(object sender, MicroSignalBindingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MicroSignalBindingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MicroSignalBindingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CancelBindingCompletedEventHandler(object sender, CancelBindingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelBindingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelBindingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void EmailResgistCompletedEventHandler(object sender, EmailResgistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EmailResgistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EmailResgistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public object Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ForgetPasswordCompletedEventHandler(object sender, ForgetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InitPasswordCompletedEventHandler(object sender, InitPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserResgistCompletedEventHandler(object sender, UserResgistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserResgistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserResgistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserResgistClientCompletedEventHandler(object sender, UserResgistClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserResgistClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserResgistClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ModifyUserCompletedEventHandler(object sender, ModifyUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ModifyUserImageCompletedEventHandler(object sender, ModifyUserImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyUserImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyUserImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserAndPwdCompletedEventHandler(object sender, GetUserAndPwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserAndPwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserAndPwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserByIdCompletedEventHandler(object sender, GetUserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserEntity Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserEntity)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertUKeyCompletedEventHandler(object sender, InsertUKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertUKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertUKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetValidateByIdCompletedEventHandler(object sender, GetValidateByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidateByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidateByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetValidateByEmailCompletedEventHandler(object sender, GetValidateByEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetValidateByEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetValidateByEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertMessageCompletedEventHandler(object sender, InsertMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMessageByFilterCompletedEventHandler(object sender, GetMessageByFilterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageByFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageByFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMessageByNewDateCompletedEventHandler(object sender, GetMessageByNewDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageByNewDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageByNewDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddMessageCompletedEventHandler(object sender, AddMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime date {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddAttachmentCompletedEventHandler(object sender, AddAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime date {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddAttachment_Ques_AnswerCompletedEventHandler(object sender, AddAttachment_Ques_AnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAttachment_Ques_AnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAttachment_Ques_AnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.DateTime date {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMessageByPostAcceptCompletedEventHandler(object sender, GetMessageByPostAcceptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageByPostAcceptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageByPostAcceptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMessageByFilterNewCompletedEventHandler(object sender, GetMessageByFilterNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageByFilterNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageByFilterNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageEntity[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int intTotalRecord {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsClaimMessageCompletedEventHandler(object sender, IsClaimMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsClaimMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsClaimMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetClaimMessageCompletedEventHandler(object sender, GetClaimMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClaimMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClaimMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MessageEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MessageEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetClaimStateCompletedEventHandler(object sender, GetClaimStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClaimStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClaimStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateMessageReadedCompletedEventHandler(object sender, UpdateMessageReadedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMessageReadedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMessageReadedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertQueAndAnsCompletedEventHandler(object sender, InsertQueAndAnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertQueAndAnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertQueAndAnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertMyQueAndAnsCompletedEventHandler(object sender, InsertMyQueAndAnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertMyQueAndAnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertMyQueAndAnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateQueAndAnsCompletedEventHandler(object sender, UpdateQueAndAnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateQueAndAnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateQueAndAnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteQueAndAnsCompletedEventHandler(object sender, DeleteQueAndAnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteQueAndAnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteQueAndAnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCountByQuesCompletedEventHandler(object sender, GetCountByQuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountByQuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountByQuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAttachmentCompletedEventHandler(object sender, GetAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AttachmentEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AttachmentEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetVersionsCompletedEventHandler(object sender, GetVersionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertSiteCategoryCompletedEventHandler(object sender, InsertSiteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSiteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSiteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ModifySiteCategoryCompletedEventHandler(object sender, ModifySiteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifySiteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifySiteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteSiteCategoryCompletedEventHandler(object sender, DeleteSiteCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSiteCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSiteCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSiteCategorysCompletedEventHandler(object sender, GetSiteCategorysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteCategorysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteCategorysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteCategoryEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteCategoryEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void InsertSiteTableCompletedEventHandler(object sender, InsertSiteTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSiteTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSiteTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ModifySiteTableCompletedEventHandler(object sender, ModifySiteTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifySiteTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifySiteTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteSiteTableCompletedEventHandler(object sender, DeleteSiteTableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSiteTableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSiteTableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSiteTablesCompletedEventHandler(object sender, GetSiteTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteTableEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteTableEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSiteTableByCategoryCompletedEventHandler(object sender, GetSiteTableByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteTableByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteTableByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteTableEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteTableEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFileByPathCompletedEventHandler(object sender, GetFileByPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileByPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileByPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNoticeRemindsWithNumCompletedEventHandler(object sender, GetNoticeRemindsWithNumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoticeRemindsWithNumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoticeRemindsWithNumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetOpenidCompletedEventHandler(object sender, GetOpenidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpenidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpenidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetCustomerEntityListCompletedEventHandler(object sender, GetCustomerEntityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerEntityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerEntityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustomerEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustomerEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllSoftUpdateInfoCompletedEventHandler(object sender, GetAllSoftUpdateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSoftUpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSoftUpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SoftUpdateInfoEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SoftUpdateInfoEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ModifySoftUpdateInfoCompletedEventHandler(object sender, ModifySoftUpdateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifySoftUpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifySoftUpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddSoftUpdateInfoCompletedEventHandler(object sender, AddSoftUpdateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSoftUpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSoftUpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteSoftUpdateInfoCompletedEventHandler(object sender, DeleteSoftUpdateInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSoftUpdateInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSoftUpdateInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllInternetLinkCompletedEventHandler(object sender, GetAllInternetLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllInternetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllInternetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InternetLinkEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InternetLinkEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ModifyInternetLinkCompletedEventHandler(object sender, ModifyInternetLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyInternetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyInternetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddInternetLinkCompletedEventHandler(object sender, AddInternetLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInternetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddInternetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteInternetLinkCompletedEventHandler(object sender, DeleteInternetLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInternetLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteInternetLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserClaimExistCompletedEventHandler(object sender, UserClaimExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserClaimExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserClaimExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllTrialApplicationCompletedEventHandler(object sender, GetAllTrialApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTrialApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTrialApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TrialApplicationEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TrialApplicationEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateTrialApplicationCompletedEventHandler(object sender, UpdateTrialApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTrialApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTrialApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddTrialApplicationCompletedEventHandler(object sender, AddTrialApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddTrialApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddTrialApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteTrialApplicationCompletedEventHandler(object sender, DeleteTrialApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTrialApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTrialApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddCustFeedbackCompletedEventHandler(object sender, AddCustFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCustFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCustFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DelCustFeedbackCompletedEventHandler(object sender, DelCustFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelCustFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelCustFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllCustFeedbackCompletedEventHandler(object sender, GetAllCustFeedbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCustFeedbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCustFeedbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CustFeedbackEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CustFeedbackEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllMSAttentionCompletedEventHandler(object sender, GetAllMSAttentionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMSAttentionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMSAttentionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MSAttentionEntity[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MSAttentionEntity[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateMSAttentionCompletedEventHandler(object sender, UpdateMSAttentionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMSAttentionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMSAttentionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddMSAttentionCompletedEventHandler(object sender, AddMSAttentionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMSAttentionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMSAttentionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteMSAttentionCompletedEventHandler(object sender, DeleteMSAttentionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMSAttentionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMSAttentionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetChatPathCompletedEventHandler(object sender, GetChatPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChatPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChatPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591